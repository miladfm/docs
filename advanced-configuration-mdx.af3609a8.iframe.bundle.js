"use strict";(self.webpackChunkcocokits=self.webpackChunkcocokits||[]).push([[9302],{"./node_modules/.pnpm/@mdx-js+react@3.0.1_@types+react@18.3.9_react@18.2.0/node_modules/@mdx-js/react/lib/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{R:()=>useMDXComponents,x:()=>MDXProvider});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/.pnpm/react@18.2.0/node_modules/react/index.js");const emptyComponents={},MDXContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext(emptyComponents);function useMDXComponents(components){const contextComponents=react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext);return react__WEBPACK_IMPORTED_MODULE_0__.useMemo((function(){return"function"==typeof components?components(contextComponents):{...contextComponents,...components}}),[contextComponents,components])}function MDXProvider(properties){let allComponents;return allComponents=properties.disableParentContext?"function"==typeof properties.components?properties.components(emptyComponents):properties.components||emptyComponents:useMDXComponents(properties.components),react__WEBPACK_IMPORTED_MODULE_0__.createElement(MDXContext.Provider,{value:allComponents},properties.children)}},"./apps/angular-kits-doc/stories/utils/markdown.util.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{function backtick(str){return`\`${str}\``}function code(str,inline=!0){return inline?`\`\`\`${str}\`\`\``:`\n\`\`\`\n\n${str}\n\n\`\`\`\n    `}__webpack_require__.d(__webpack_exports__,{aY:()=>code,pj:()=>backtick})},"./apps/angular-kits-doc/stories/advanced-configuration.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>MDXContent});__webpack_require__("./node_modules/.pnpm/react@18.2.0/node_modules/react/index.js");var jsx_runtime=__webpack_require__("./node_modules/.pnpm/react@18.2.0/node_modules/react/jsx-runtime.js"),lib=__webpack_require__("./node_modules/.pnpm/@mdx-js+react@3.0.1_@types+react@18.3.9_react@18.2.0/node_modules/@mdx-js/react/lib/index.js"),dist=__webpack_require__("./node_modules/.pnpm/@storybook+addon-docs@8.0.10_encoding@0.1.13_webpack-sources@3.2.3/node_modules/@storybook/addon-docs/dist/index.mjs"),src=__webpack_require__("./packages/internal/storybook-theme-switcher/src/index.ts"),lodash=__webpack_require__("./node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/lodash.js"),markdown_util=__webpack_require__("./apps/angular-kits-doc/stories/utils/markdown.util.ts");const tocItems=[{id:"install-specific-components",name:"Install Specific Components"},{id:"override-theme-ui-configurations",name:"Override Theme UI Configurations"},{id:"merge-themes",name:"Merge Themes"},{id:"use-only-one-mode-from-each-collection",name:"Use Only One Mode from Each Collection"},{id:"change-token-selectors",name:"Change Token Selectors"}];function getInstallPackagesStep2Provide(theme){const tsCodes=`typescript\n\nimport { provideCocokits } from '@cocokits/angular-core';\nimport { ${(0,lodash.camelCase)(theme.id)}UIComponentConfig } from '@cocokits/theme-${theme.id}';\n\nbootstrapApplication(AppComponent, {\n  providers: [\n    provideCocokits(${(0,lodash.camelCase)(theme.id)}UIComponentConfig),\n    ...\n  ]\n})`;return(0,markdown_util.aY)(tsCodes)}function getInstallPackagesStep3AngularJson(theme){const tsCodes=`json\n {\n  ...\n  "styles": [\n    ...,\n    "@cocokits/theme-${theme.id}/tokens.min.css"\n  ],\n  ...\n}`;return(0,markdown_util.aY)(tsCodes)}function getInstallPackagesStep3ComponentStyle(theme){const ts=`scss\n@use "@cocokits/theme-${theme.id}/styles-core" as ${theme.name};\n\n@include ${theme.name}.components_button;\n@include ${theme.name}.components_icon_button;\n@include ${theme.name}.components_radio_button;\n@include ${theme.name}.components_radio_group;\n  `;return(0,markdown_util.aY)(ts)}function getOverrideComponentConfig(theme){const ts=`typescript\nimport { bootstrapApplication } from '@angular/platform-browser';\nimport {\n  provideCocokits,\n  DeepPartial,\n  ThemeUIComponentsConfig,\n  deepMerge,\n} from '@cocokits/angular-components';\nimport { ${(0,lodash.camelCase)(theme.id)}UIComponentConfig } from '@cocokits/theme-${theme.id}';\n\nconst customUIComponentConfig = deepMerge(${(0,lodash.camelCase)(theme.id)}UIComponentConfig, {\n  button: {\n    size: {\n      default: 'xs',\n    },\n  },\n} as DeepPartial<ThemeUIComponentsConfig>);\n\nbootstrapApplication(AppComponent, {\n  providers: [\n    provideCocokits(customUIComponentConfig),\n  ],\n});\n  `;return(0,markdown_util.aY)(ts)}function getMergeThemesStep2Provide(){return(0,markdown_util.aY)("typescript\n\nimport { bootstrapApplication } from '@angular/platform-browser';\nimport {\n  provideCocokits,\n  DeepPartial,\n  ThemeUIComponentsConfig,\n  deepMerge,\n} from '@cocokits/angular-components';\nimport { defaultUIComponentConfig } from '@cocokits/theme-default';\nimport { framesXUIComponentConfig } from '@cocokits/theme-frames-x';\n\nconst customUIComponentConfig = deepMerge(defaultUIComponentConfig, {\n  button: framesXUIComponentConfig.button,\n  iconButton: framesXUIComponentConfig.iconButton,\n  radioGroup: framesXUIComponentConfig.radioGroup,\n  radioButton: framesXUIComponentConfig.radioButton,\n} as DeepPartial<ThemeUIComponentsConfig>);\n\nbootstrapApplication(AppComponent, {\n  providers: [\n    provideCocokits(customUIComponentConfig)\n  ],\n});\n")}function getMergeThemesStep3Scss(){return(0,markdown_util.aY)('scss\n  \n@use "@cocokits/theme-default/styles-core" as Default;\n@use "@cocokits/theme-frames-x/styles-core" as FramesX;\n\n// Import styles from Frames X theme\n@include FramesX.components_button;\n@include FramesX.components_icon_button;\n@include FramesX.components_radio_button;\n@include FramesX.components_radio_group;\n\n// Import styles from Default theme\n@include Default.components_checkbox;\n@include Default.components_chip;\n@include Default.components_chip_list;\n@include Default.components_divider;\n@include Default.components_error;\n@include Default.components_form_field;\n@include Default.components_hint;\n@include Default.components_icon;\n@include Default.components_input;\n@include Default.components_label;\n@include Default.components_leading;\n@include Default.components_menu;\n@include Default.components_menu_item;\n@include Default.components_option;\n@include Default.components_option_group;\n@include Default.components_prefix;\n@include Default.components_select;\n@include Default.components_select_preview;\n@include Default.components_suffix;\n@include Default.components_textarea;\n@include Default.components_toggle;\n@include Default.components_trailing;\n\n  \n  ')}function getUseOnlyOneModeOption1Step1Code(theme){const mixinNames=Object.entries(theme.selectedModes).map((([collection,mode])=>`@include ${theme.name}.use_${collection}_${mode}`)),scss=`scss\n@use "@cocokits/theme-${theme.id}/tokens-core" as ${theme.name};\n\n${mixinNames.join("\n")}\n  `;return(0,markdown_util.aY)(scss)}function getUseOnlyOneModeOption1Step2ClassSelector(theme){const classSelectorCode=`html\n<html class="${Object.entries(theme.selectedModes).map((([collection,mode])=>`cck-theme-${theme.id}__${collection}--${mode}`)).join(" ")}">\n...\n</html>\n  `;return(0,markdown_util.aY)(classSelectorCode)}function getUseOnlyOneModeOption1Step2AttrSelector(theme){const classSelectorCode=`html\n<html data-cck-theme="${Object.entries(theme.selectedModes).map((([collection,mode])=>`${theme.id}__${collection}--${mode}`)).join(" ")}">\n...\n</html>\n  `;return(0,markdown_util.aY)(classSelectorCode)}function getUseOnlyOneModeOption1code(theme){const mixinNames=Object.entries(theme.selectedModes).map((([collection,mode])=>`@include ${theme.name}.variables_${collection}_${mode}`)),scss=`scss\n@use "@cocokits/theme-${theme.id}/tokens-core" as ${theme.name};\n\n:root {\n  ${mixinNames.join("\n  ")}\n}\n  `;return(0,markdown_util.aY)(scss)}function getChangeTokenSelectorsItems(theme){const lightFrom="frames-x"===theme.id?".cck-theme-frames-x__color-mode--light":".cck-theme-default__brand-color-1--light",darkFrom="frames-x"===theme.id?".cck-theme-frames-x__color-mode--dark":".cck-theme-default__brand-color-1--dark";return`\n- ${(0,markdown_util.pj)(lightFrom)} -> ${(0,markdown_util.pj)(".cck-theme-light")}\n- ${(0,markdown_util.pj)(darkFrom)} -> ${(0,markdown_util.pj)(".cck-theme-dark")}\n  `}function getChangeTokenSelectorsStep1Code(theme){const lightMixin="frames-x"===theme.id?"FramesX.variables_color_mode_light":"Default.cck-theme-default__brand-color-1--light",darkMixin="frames-x"===theme.id?"FramesX.variables_color_mode_dark":"Default.cck-theme-default__brand-color-1--dark",collectionNameWithLightAndDark="frames-x"===theme.id?"color-mode":"brand-color-1",otherMixins=Object.entries(theme.selectedModes).filter((([collection])=>collection!==collectionNameWithLightAndDark)).map((([collection,mode])=>`@include ${theme.name}.variables_${collection}_${mode}`)),scss=`scss\n@use "@cocokits/theme-${theme.id}/tokens-core" as ${theme.name};\n\n.cck-theme-light {\n  @include ${lightMixin};\n}\n\n.cck-theme-dark {\n  @include ${darkMixin};\n}\n\n:root {\n  ${otherMixins.join("\n  ")}\n}\n  `;return(0,markdown_util.aY)(scss)}function getChangeTokenSelectorsStep2Code(){return(0,markdown_util.aY)('html\n<html class="cck-theme-light">\n  \x3c!-- ... --\x3e\n</html>\n\n\x3c!-- Or switch to dark mode --\x3e\n\n<html class="cck-theme-dark">\n  \x3c!-- ... --\x3e\n</html>')}function _createMdxContent(props){const _components={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,lib.R)(),...props.components};return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.W8,{title:"Getting Started/Advanced Configuration"}),"\n",(0,jsx_runtime.jsxs)(src.Nk,{groupTitle:"Getting Started",toc:tocItems,utilsPage:!0,children:[(0,jsx_runtime.jsx)(_components.h1,{id:"advanced-configuration-guide",children:"Advanced Configuration Guide"}),(0,jsx_runtime.jsxs)(_components.p,{children:["This guide explains how to install ",(0,jsx_runtime.jsx)(_components.code,{children:"CocoKits"})," into your project with your favorite theme in advanced mode,\nallowing you to customize the default configuration."]}),(0,jsx_runtime.jsx)(_components.p,{children:"You can:"}),(0,jsx_runtime.jsxs)(_components.ul,{children:["\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Install only specific components"})," instead of the entire component library."]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Override theme UI configurations"}),", such as changing the default size of a component."]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Merge themes"})," to create a custom theme."]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Use only one mode"})," from each collection."]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Change token selectors"})," to use shorter or custom selectors."]}),"\n"]}),(0,jsx_runtime.jsx)(_components.hr,{}),(0,jsx_runtime.jsx)(_components.h2,{id:"install-specific-components",children:"Install Specific Components"}),(0,jsx_runtime.jsxs)(_components.p,{children:[(0,jsx_runtime.jsx)(_components.code,{children:"CocoKits"})," provides individual packages for each component, and ",(0,jsx_runtime.jsx)(_components.code,{children:"@cocokits/angular-components"})," is a wrapper for all components.\nYou can choose to install only the components you need."]}),(0,jsx_runtime.jsxs)(_components.p,{children:["In this example, we'll install only the ",(0,jsx_runtime.jsx)(_components.code,{children:"Button"})," and ",(0,jsx_runtime.jsx)(_components.code,{children:"Radio"})," components."]}),(0,jsx_runtime.jsx)(_components.h3,{id:"step-1-install-the-components",children:"Step 1: Install the Components"}),(0,jsx_runtime.jsx)(_components.p,{children:"Install the specific components and the theme:"}),(0,jsx_runtime.jsx)(src.rs,{fn:theme=>(0,jsx_runtime.jsx)(src.gV,{codeTabs:{npm:`npm i @cocokits/angular-core @cocokits/angular-button @cocokits/angular-radio @cocokits/theme-${theme.id}`,yarn:`yarn add @cocokits/angular-core @cocokits/angular-button @cocokits/angular-radio @cocokits/theme-${theme.id}`,pnpm:`pnpm add @cocokits/angular-core @cocokits/angular-button @cocokits/angular-radio @cocokits/theme-${theme.id}`}})}),(0,jsx_runtime.jsx)(_components.h3,{id:"step-2-provide-theme-configuration",children:"Step 2: Provide Theme Configuration"}),(0,jsx_runtime.jsx)(_components.p,{children:"Provide the theme configuration in the root of your application."}),(0,jsx_runtime.jsx)(src.rs,{fn:getInstallPackagesStep2Provide}),(0,jsx_runtime.jsx)(_components.h3,{id:"step-3-import-tokens-and-component-styles",children:"Step 3: Import Tokens and Component Styles"}),(0,jsx_runtime.jsx)(_components.p,{children:"Instead of importing all styles, you can import only the necessary tokens and styles for the components you're using."}),(0,jsx_runtime.jsx)(_components.h4,{id:"import-tokens",children:"Import Tokens"}),(0,jsx_runtime.jsxs)(_components.p,{children:["In your ",(0,jsx_runtime.jsx)(_components.code,{children:"angular.json"})," or ",(0,jsx_runtime.jsx)(_components.code,{children:"project.json"}),", add the tokens CSS file:"]}),(0,jsx_runtime.jsx)(src.rs,{fn:getInstallPackagesStep3AngularJson}),(0,jsx_runtime.jsxs)(_components.p,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Note:"})," We are only importing the tokens here, not the global styles."]}),(0,jsx_runtime.jsx)(_components.h4,{id:"import-component-styles",children:"Import Component Styles"}),(0,jsx_runtime.jsxs)(_components.p,{children:["In your ",(0,jsx_runtime.jsx)(_components.code,{children:"styles.scss"}),", add the custom styles for the components you installed:"]}),(0,jsx_runtime.jsx)(src.rs,{fn:getInstallPackagesStep3ComponentStyle}),(0,jsx_runtime.jsxs)(_components.p,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Note"}),": Adjust the component style includes based on the components you've installed."]}),(0,jsx_runtime.jsx)(_components.hr,{}),(0,jsx_runtime.jsx)(_components.h2,{id:"override-theme-ui-configurations",children:"Override Theme UI Configurations"}),(0,jsx_runtime.jsxs)(_components.p,{children:["You can customize the default configuration of the theme. For example, to change the default size of the ",(0,jsx_runtime.jsx)(_components.code,{children:"Button"})," component from ",(0,jsx_runtime.jsx)(_components.code,{children:"xs"}),":"]}),(0,jsx_runtime.jsx)(src.rs,{fn:getOverrideComponentConfig}),(0,jsx_runtime.jsxs)(_components.p,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Important:"})," If you change the configuration of a component (e.g., adding a new size or color), make sure you include the corresponding styles. Otherwise, the new configuration may not be reflected in your application."]}),(0,jsx_runtime.jsx)(_components.hr,{}),(0,jsx_runtime.jsx)(_components.h2,{id:"merge-themes",children:"Merge Themes"}),(0,jsx_runtime.jsxs)(_components.p,{children:["You can also merge multi themes and create a new theme. For example, you want to have the ",(0,jsx_runtime.jsx)(_components.code,{children:"Cocokits"})," theme but ",(0,jsx_runtime.jsx)(_components.code,{children:"button"}),", ",(0,jsx_runtime.jsx)(_components.code,{children:"radio"})," be from ",(0,jsx_runtime.jsx)(_components.code,{children:"Frames X"})]}),(0,jsx_runtime.jsx)(_components.h3,{id:"step-1-install-the-themes",children:"Step 1: Install the Themes"}),(0,jsx_runtime.jsx)(src.gV,{codeTabs:{npm:"npm i @cocokits/angular-components @cocokits/theme-frames-x @cocokits/theme-default",yarn:"yarn add @cocokits/angular-components @cocokits/theme-frames-x @cocokits/theme-default",pnpm:"pnpm add @cocokits/angular-components @cocokits/theme-frames-x @cocokits/theme-default"}}),(0,jsx_runtime.jsx)(_components.h3,{id:"step-2-merge-the-theme-configurations",children:"Step 2: Merge the Theme Configurations"}),(0,jsx_runtime.jsx)(src.rs,{fn:getMergeThemesStep2Provide}),(0,jsx_runtime.jsx)(_components.h3,{id:"step-3-import-component-styles-from-each-theme",children:"Step 3: Import Component Styles from Each Theme"}),(0,jsx_runtime.jsxs)(_components.p,{children:["In your ",(0,jsx_runtime.jsx)(_components.code,{children:"styles.scss"}),", include styles from both themes:"]}),(0,jsx_runtime.jsx)(_components.p,{children:(0,jsx_runtime.jsx)(_components.strong,{children:"styles.scss"})}),(0,jsx_runtime.jsx)(src.rs,{fn:getMergeThemesStep3Scss}),(0,jsx_runtime.jsx)(_components.hr,{}),(0,jsx_runtime.jsx)(_components.h2,{id:"use-only-one-mode-from-each-collection",children:"Use Only One Mode from Each Collection"}),(0,jsx_runtime.jsx)(_components.p,{children:"Each theme provides multiple modes for each collection (e.g., color, sizing). If your project requires only one mode per collection,\nyou can selectively include only those modes."}),(0,jsx_runtime.jsx)(_components.h3,{id:"option-1-import-specific-modes-with-default-selectors",children:"Option 1: Import Specific Modes with Default Selectors"}),(0,jsx_runtime.jsx)(_components.h4,{id:"step-1-import-modes",children:"Step 1: Import Modes"}),(0,jsx_runtime.jsx)(_components.p,{children:(0,jsx_runtime.jsx)(_components.strong,{children:(0,jsx_runtime.jsx)(_components.code,{children:"styles.scss"})})}),(0,jsx_runtime.jsx)(src.rs,{fn:getUseOnlyOneModeOption1Step1Code}),(0,jsx_runtime.jsx)(_components.h4,{id:"step-2-add-default-selectors-to-your-html-tag",children:"Step 2: Add Default Selectors to Your HTML Tag"}),(0,jsx_runtime.jsxs)(_components.p,{children:["In your index.html, add the default selectors to the ",(0,jsx_runtime.jsx)(_components.code,{children:"<html>"})," tag:"]}),(0,jsx_runtime.jsx)(src.rs,{fn:getUseOnlyOneModeOption1Step2ClassSelector}),(0,jsx_runtime.jsxs)(_components.p,{children:["Alternatively, use the ",(0,jsx_runtime.jsx)(_components.code,{children:"data-cck-theme"})," attribute:"]}),(0,jsx_runtime.jsx)(src.rs,{fn:getUseOnlyOneModeOption1Step2AttrSelector}),(0,jsx_runtime.jsxs)(_components.p,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Note:"})," Ensure that you include at least one mode from each collection to have all necessary tokens available in your project."]}),(0,jsx_runtime.jsx)(_components.h3,{id:"option-2-apply-modes-without-selectors",children:"Option 2: Apply Modes Without Selectors"}),(0,jsx_runtime.jsxs)(_components.p,{children:["you can apply modes directly to the ",(0,jsx_runtime.jsx)(_components.code,{children:":root"})," without using any selectors."]}),(0,jsx_runtime.jsx)(src.rs,{fn:getUseOnlyOneModeOption1code}),(0,jsx_runtime.jsxs)(_components.p,{children:["With this approach, you ",(0,jsx_runtime.jsx)(_components.strong,{children:"don't need to add any classes to your HTML tags"}),", and all necessary tokens are available globally in your application."]}),(0,jsx_runtime.jsx)(_components.hr,{}),(0,jsx_runtime.jsx)(_components.h2,{id:"change-token-selectors",children:"Change Token Selectors"}),(0,jsx_runtime.jsx)(_components.p,{children:"By default, the token css selectors have the following structure:"}),(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{children:"cch-theme-[THEME_NAME]__[COLLECTION-NAME]--[MODE-NAME]\n"})}),(0,jsx_runtime.jsx)(_components.p,{children:"If you prefer shorter or custom selector names, you can redefine them using the provided SCSS mixins."}),(0,jsx_runtime.jsx)(_components.h3,{id:"example-shorten-color-mode-selectors",children:"Example: Shorten Color Mode Selectors"}),(0,jsx_runtime.jsx)(_components.p,{children:"Let's change the color mode selectors from:"}),(0,jsx_runtime.jsx)(src.rs,{fn:getChangeTokenSelectorsItems}),(0,jsx_runtime.jsx)(_components.h4,{id:"step-1-define-custom-selectors",children:"Step 1: Define Custom Selectors"}),(0,jsx_runtime.jsx)(_components.p,{children:(0,jsx_runtime.jsx)(_components.strong,{children:"styles.scss"})}),(0,jsx_runtime.jsx)(src.rs,{fn:getChangeTokenSelectorsStep1Code}),(0,jsx_runtime.jsx)(_components.h4,{id:"step-2-apply-custom-selectors",children:"Step 2: Apply Custom Selectors"}),(0,jsx_runtime.jsx)(_components.p,{children:(0,jsx_runtime.jsx)(_components.strong,{children:"index.html"})}),(0,jsx_runtime.jsx)(src.rs,{fn:getChangeTokenSelectorsStep2Code}),(0,jsx_runtime.jsxs)(_components.p,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Note:"})," This approach allows you to switch between light and dark modes using shorter class names."]})]})]})}function MDXContent(props={}){const{wrapper:MDXLayout}={...(0,lib.R)(),...props.components};return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,{...props,children:(0,jsx_runtime.jsx)(_createMdxContent,{...props})}):_createMdxContent(props)}}}]);