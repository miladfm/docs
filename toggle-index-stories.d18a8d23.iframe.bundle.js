(self.webpackChunkcocokits=self.webpackChunkcocokits||[]).push([[8476],{"./packages/angular/core/src/tokens.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{k:()=>UIComponentConfig});const UIComponentConfig=new(__webpack_require__("./node_modules/.pnpm/@angular+core@18.2.0_rxjs@7.8.1_zone.js@0.14.10/node_modules/@angular/core/fesm2022/core.mjs").InjectionToken)("UI_COMPONENT_CONFIG")},"./packages/angular/core/src/ui-base.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{W:()=>_UiBaseComponent});var tslib_es6=__webpack_require__("./node_modules/.pnpm/tslib@2.7.0/node_modules/tslib/tslib.es6.mjs"),core=__webpack_require__("./node_modules/.pnpm/@angular+core@18.2.0_rxjs@7.8.1_zone.js@0.14.10/node_modules/@angular/core/fesm2022/core.mjs"),src=__webpack_require__("./packages/common/utils/src/index.ts");function generateResult(host,prefix){const attrs=Object.values(host.nativeElement.attributes).filter((attrName=>attrName.name.startsWith(prefix)));return(0,src.xW)(attrs,(attr=>({[attr.name.replace(prefix,"")]:attr.value})))}var core_src=__webpack_require__("./packages/common/core/src/index.ts"),tokens=__webpack_require__("./packages/angular/core/src/tokens.ts");let _UiBaseComponent=class _UiBaseComponent{constructor(){this.uiComponentConfig=(0,core.inject)(tokens.k),this._type=(0,core.input)(void 0,{alias:"type"}),this._size=(0,core.input)(void 0,{alias:"size"}),this._color=(0,core.input)(void 0,{alias:"color"}),this._additional=function fromAttrWithPrefix(prefix){const host=(0,core.inject)(core.ElementRef),value=(0,core.signal)(generateResult(host,prefix)),observer=new MutationObserver((function(mutations){mutations.forEach((function(mutation){const attrName=mutation.attributeName;"attributes"===mutation.type&&attrName&&attrName.startsWith(prefix)&&value.set(generateResult(host,prefix))}))}));return observer.observe(host.nativeElement,{attributes:!0}),(0,core.inject)(core.DestroyRef).onDestroy((()=>observer.disconnect())),value.asReadonly()}("data-cck-"),this.type=(0,core.computed)((()=>this._type())),this.size=(0,core.computed)((()=>this._size())),this.color=(0,core.computed)((()=>this._color())),this.additional=(0,core.computed)((()=>this._additional())),this.classNames=(0,core.computed)((()=>(0,core_src.Zz)(this.componentName,{type:this.baseClassOptions.skipType?null:this.type(),size:this.baseClassOptions.skipSize?null:this.size(),color:this.baseClassOptions.skipColor?null:this.color(),additional:this.baseClassOptions.skipAdditional?void 0:this.additional()},this.uiComponentConfig))),this.hostClassNames=(0,core.computed)((()=>[...this.classNames().host,...this.extraHostElementClassConditions().flatMap((condition=>condition.if?condition.classes:[]))])),this.baseClassOptions={skipType:!1,skipColor:!1,skipSize:!1,skipAdditional:!1}}static{this.propDecorators={_type:[{type:core.Input,args:[{isSignal:!0,alias:"type",required:!1,transform:void 0}]}],_size:[{type:core.Input,args:[{isSignal:!0,alias:"size",required:!1,transform:void 0}]}],_color:[{type:core.Input,args:[{isSignal:!0,alias:"color",required:!1,transform:void 0}]}]}}};_UiBaseComponent=(0,tslib_es6.Cg)([(0,core.Directive)()],_UiBaseComponent)},"./packages/angular/toggle/stories/toggle/index.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Color:()=>Color,Default:()=>Default,NgModel:()=>NgModel,ReactiveForm:()=>ReactiveForm,Size:()=>Size,ThemeDefaultBox:()=>ThemeDefaultBox,Type:()=>Type,__namedExportsOrder:()=>index_stories_namedExportsOrder,default:()=>index_stories});var fesm2022_forms=__webpack_require__("./node_modules/.pnpm/@angular+forms@18.2.0_@angular+common@18.2.0_@angular+core@18.2.0_rxjs@7.8.1_zone.js@0.14.10__sbz7jv6ol3znvubiinn6qeqfj4/node_modules/@angular/forms/fesm2022/forms.mjs"),dist=__webpack_require__("./node_modules/.pnpm/@storybook+angular@8.0.10_gaoznjnmxt2bwxtxvyb2wjkjne/node_modules/@storybook/angular/dist/index.mjs"),ui_base_component=__webpack_require__("./packages/angular/core/src/ui-base.component.ts"),tokens=__webpack_require__("./packages/angular/core/src/tokens.ts"),src=__webpack_require__("./packages/internal/storybook-theme-switcher/src/index.ts");var tslib_es6=__webpack_require__("./node_modules/.pnpm/tslib@2.7.0/node_modules/tslib/tslib.es6.mjs");var toggle_componentngResource=__webpack_require__("./packages/angular/toggle/src/lib/toggle/toggle.component.scss?ngResource"),toggle_componentngResource_default=__webpack_require__.n(toggle_componentngResource),core=__webpack_require__("./node_modules/.pnpm/@angular+core@18.2.0_rxjs@7.8.1_zone.js@0.14.10/node_modules/@angular/core/fesm2022/core.mjs"),utils_src=__webpack_require__("./packages/common/utils/src/index.ts");let NEXT_ID=1;const TOGGLE_CONTROL_VALUE_ACCESSOR={provide:fesm2022_forms.kq,useExisting:(0,core.forwardRef)((()=>ToggleComponent)),multi:!0};let ToggleComponent=class ToggleComponent extends ui_base_component.W{constructor(){super(...arguments),this.componentName="toggle",this.extraHostElementClassConditions=(0,core.computed)((()=>[{if:this.disabled(),classes:this.classNames().disabled},{if:this.checked(),classes:this.classNames().checked},{if:!this.checked(),classes:this.classNames().unchecked},{if:"before"===this.labelPosition(),classes:this.classNames().labelBefore}])),this.cd=(0,core.inject)(core.ChangeDetectorRef),this.elemRef=(0,core.inject)(core.ElementRef),this.id=(0,core.input)("TOGGLE_"+NEXT_ID++),this.labelPosition=(0,core.input)("after"),this.checked=(0,core.model)(!1),this._disabled=(0,core.model)(void 0,{alias:"disabled"}),this.disabled=(0,core.computed)((()=>(0,utils_src.Ix)(this._disabled()))),this.change=(0,core.output)(),this.onTouched=()=>{},this.controlValueAccessorChangeFn=()=>{}}toggle(){this.setChecked(!this.checked())}setChecked(checked){this.checked()!==checked&&(this.checked.set(checked),this.controlValueAccessorChangeFn(checked),this.change.emit({checked}))}onHostClick(event){event.target===this.elemRef.nativeElement&&this.toggle()}onInputClick(){this.toggle()}onInteractionEvent(event){event.stopPropagation()}onBlur(){Promise.resolve().then((()=>{this.onTouched(),this.cd.markForCheck()}))}writeValue(value){this.checked.set(!!value)}registerOnChange(fn){this.controlValueAccessorChangeFn=fn}registerOnTouched(fn){this.onTouched=fn}setDisabledState(isDisabled){this._disabled.set(isDisabled)}static{this.propDecorators={id:[{type:core.Input,args:[{isSignal:!0,alias:"id",required:!1,transform:void 0}]}],labelPosition:[{type:core.Input,args:[{isSignal:!0,alias:"labelPosition",required:!1,transform:void 0}]}],checked:[{type:core.Input,args:[{isSignal:!0,alias:"checked",required:!1}]},{type:core.Output,args:["checkedChange"]}],_disabled:[{type:core.Input,args:[{isSignal:!0,alias:"disabled",required:!1}]},{type:core.Output,args:["disabledChange"]}],change:[{type:core.Output,args:["change"]}]}}};ToggleComponent=(0,tslib_es6.Cg)([(0,core.Component)({standalone:!0,imports:[],selector:"cck-toggle",template:'<label [class]="classNames().label" [for]="id()">\n  <div [class]="classNames().sliderWrapper">\n    <input\n      type="checkbox"\n      [class]="classNames().input"\n      [checked]="checked()"\n      [disabled]="disabled()"\n      [id]="id()"\n      (blur)="onBlur()"\n      (click)="onInputClick()"\n      (change)="onInteractionEvent($event)" />\n\n    <div [class]="classNames().thumb"></div>\n    <div [class]="classNames().backdrop"></div>\n  </div>\n\n  <ng-content></ng-content>\n</label>\n',changeDetection:core.ChangeDetectionStrategy.OnPush,encapsulation:core.ViewEncapsulation.None,providers:[TOGGLE_CONTROL_VALUE_ACCESSOR],host:{"[class]":"hostClassNames()","(click)":"onHostClick($event)"},styles:[toggle_componentngResource_default()]})],ToggleComponent);const Default={name:"Default",parameters:{docs:{description:{story:"Shows the default example with no additional configurations, providing an interactive example in its most basic form."},source:{code:"TODO: Add source code of story"}}},render:args=>({props:{...args,uiComponentConfig:(0,src.cQ)()?.uiComponentConfig},template:'\n        <table class="story-variant-table story-variant-table--no-col-header story-variant-table--bottom-align">\n        <thead>\n          <th>Default</th>\n          <th>Label Before</th>\n          <th>Disabled</th>\n        </thead>\n        <tbody>\n          <tr>\n              <td>\n                <cck-toggle checked="true">Slide me!</cck-toggle>\n              </td>\n              <td>\n                <cck-toggle checked="true" [labelPosition]="\'before\'">Slide me!</cck-toggle>\n              </td>\n              <td>\n                <cck-toggle checked="true" disabled="true">Slide me!</cck-toggle>\n              </td>\n          </tr>\n        </tbody>\n      </table>\n    '})},Type={name:"Type",tags:["uiComponentName:toggle","uiComponentPropName:type"],parameters:{docs:{description:{story:"Displays variations in appearance and functionality, demonstrating how different types can be used to create unique button styles."},source:{code:"TODO: Add source code of story"}}},render:args=>({props:{...args,uiComponentConfig:(0,src.cQ)()?.uiComponentConfig},template:'\n        <table class="story-variant-table story-variant-table--no-col-header">\n        <thead>\n          @for (type of uiComponentConfig?.toggle.type?.values; track type) {\n            <th>{{type}}</th>\n          }\n        </thead>\n        <tbody>\n          <tr>\n            @for (type of uiComponentConfig?.toggle.type?.values; track type) {\n              <td>\n                <cck-toggle [type]="type"></cck-toggle>\n              </td>\n            }\n          </tr>\n         \n        </tbody>\n      </table>\n    '})},Size={name:"Size",tags:["uiComponentName:toggle","uiComponentPropName:size"],parameters:{docs:{description:{story:"The size is adjustable to suit different design needs and screen dimensions, improving both aesthetics and usability."},source:{code:"TODO: Add source code of story"}}},render:args=>({props:{...args,uiComponentConfig:(0,src.cQ)()?.uiComponentConfig},template:'\n        <table class="story-variant-table story-variant-table--no-col-header">\n        <thead>\n          @for (size of uiComponentConfig?.toggle.size?.values; track size) {\n            <th>{{size}}</th>\n          }\n        </thead>\n        <tbody>\n          <tr>\n            @for (size of uiComponentConfig?.toggle.size?.values; track size) {\n              <td>\n                <cck-toggle checked="true" [size]="size"></cck-toggle>\n              </td>\n            }\n          </tr>\n         \n        </tbody>\n      </table>\n    '})},Color={name:"Color",tags:["uiComponentName:toggle","uiComponentPropName:color"],parameters:{docs:{description:{story:"Color options enable seamless integration with various themes or to highlight specific actions."},source:{code:"TODO: Add source code of story"}}},render:args=>({props:{...args,uiComponentConfig:(0,src.cQ)()?.uiComponentConfig},template:'\n        <table class="story-variant-table story-variant-table--no-col-header">\n        <thead>\n          @for (color of uiComponentConfig?.toggle.color?.values; track color) {\n            <th>{{color}}</th>\n          }\n        </thead>\n        <tbody>\n          <tr>\n            @for (color of uiComponentConfig?.toggle.color?.values; track color) {\n              <td>\n                <cck-toggle checked="true" [color]="color"></cck-toggle>\n              </td>\n            }\n          </tr>\n         \n        </tbody>\n      </table>\n    '})},ThemeDefaultBox={name:"Theme Default: Box",tags:["theme:default"],parameters:{docs:{description:{story:"An advanced example of the toggle component featuring a custom implementation and design that incorporates toggle functionality within box selections, enhancing interactivity and visual presentation."},source:{code:"\n          TODO: ...\n        "}}},render:args=>({props:{...args,uiComponentConfig:(0,src.cQ)()?.uiComponentConfig,modelValue:!0},template:'\n          <cck-toggle [(ngModel)]="modelValue" labelPosition="before" class="story-theme-default-toggle-box">\n            <div class="flex-col">\n              <span class="story-theme-default-toggle-box__title">Enable early access</span>\n              <span class="story-theme-default-toggle-box__text">Get access to new features before they are released.</span>\n            </div>\n          </cck-toggle>\n      \n    '})},NgModel={name:"NgModel",parameters:{docs:{description:{story:"Demonstrates how to use Angular's NgModel for two-way data binding, enabling automatic synchronization between the UI element and the model."},source:{code:"\n          TODO: ...\n        "}}},render:args=>({props:{...args,uiComponentConfig:(0,src.cQ)()?.uiComponentConfig,modelValue:!0},template:'\n      <div class="flex-row w-100 justify-around">\n      \n        <div class="flex-col">\n          <cck-toggle [(ngModel)]="modelValue"></cck-toggle>\n        </div>\n        \n        <div class="hr-h"></div>\n        \n        <div class="flex-col gap-24 align-center">\n          <div class="p-sm-regular-3">NgModel Value: {{modelValue}}</div>\n          <button class="story-button" (click)="modelValue = false">Set To False</button>\n          <button class="story-button" (click)="modelValue = true">Set To True</button>\n        </div>\n      </div>\n      \n    '})},ReactiveForm={name:"ReactiveForm",parameters:{docs:{description:{story:"Illustrates integration within Angular's Reactive Forms, focusing on form control, validation, and efficient state management."},source:{code:"\n          TODO: ...\n        "}}},render:args=>({props:{...args,uiComponentConfig:(0,src.cQ)()?.uiComponentConfig,control:new fesm2022_forms.MJ(!0)},template:'\n      <div class="flex-row w-100 justify-around">\n      \n        <div class="flex-col">\n          <cck-toggle [formControl]="control"></cck-toggle>\n        </div>\n        \n        <div class="hr-h"></div>\n        \n        <div class="flex-col gap-24 align-center">\n          <div class="p-sm-regular-3">Control Value: {{control.value}}</div>\n          <button class="story-button" (click)="control.reset()">Reset</button>\n          <button class="story-button" (click)="control.setValue(true)">Set To True</button>\n          <button class="story-button" (click)="control.setValue(false)">Set to False</button>\n          <button class="story-button" (click)="control.disabled ? control.enable() : control.disable()">Toggle Disable</button>\n        </div>\n      </div>\n      \n    '})},index_stories={component:ToggleComponent,subcomponents:[ui_base_component.W],title:"UI Components/Toggle",tags:["autodocs"],decorators:[(0,dist.componentWrapperDecorator)((story=>`<div class="flex gap-24">${story}</div>`)),(0,dist.moduleMetadata)({imports:[fesm2022_forms.YN,fesm2022_forms.X1],providers:[{provide:tokens.k,useFactory:()=>(0,src.cQ)()?.uiComponentConfig}]})],parameters:{docs:{description:{component:["The `ToggleComponent` from `@cocokits` is a simple yet powerful UI control that allows users to switch a single option on or off. Commonly used to activate or deactivate settings, toggles provide a clear and intuitive way to manage binary options, enhancing user control over specific preferences or features. This component seamlessly integrates with multiple design system themes, ensuring a consistent and visually cohesive experience across various applications."].join("\n")}}},argTypes:{_disabled:{table:{type:{summary:"boolean"},defaultValue:{summary:""}}}},args:{}},index_stories_namedExportsOrder=["Default","Type","Size","Color","ThemeDefaultBox","NgModel","ReactiveForm"]},"./packages/angular/toggle/src/lib/toggle/toggle.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/.pnpm/css-loader@7.1.2_webpack@5.93.0_@swc+core@1.3.107_@swc+helpers@0.5.13__esbuild@0.23.0_/node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/.pnpm/css-loader@7.1.2_webpack@5.93.0_@swc+core@1.3.107_@swc+helpers@0.5.13__esbuild@0.23.0_/node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,"",""]),module.exports=___CSS_LOADER_EXPORT___.toString()}}]);