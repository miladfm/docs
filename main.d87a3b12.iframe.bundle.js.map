{"version":3,"file":"main.d87a3b12.iframe.bundle.js","mappings":";;;;;AAgBA;;;;;;;;;;ACoBA;;AAGA;;;;;;;;;;AAWA;;;;;;;;AASA;;;;;;AAMA;;;;;;;;;;;;;;;;AAiBA;;;;;;;;ACrEA;;;;;;;;;;AAUA;;;;AAKA;;;;;;ACzBA;;;;ACOA;;;ACRA;;;AA6BA;AACA;;AAGA;;;AAGA;;AAGA;;;;;;;;;ACvCA;;;;;;;;AA8BA;;;;;AAMA;;;;;;;;;AAUA;;;;;;;;;AAUA;;;;;;;;;AAUA;;;;;;;;ACjEA;;;;;;AAyBA;;;;;;AAMA;;;;AAIA;;;AAIA;;;;AAKA;;;;AAKA;;;AAIA;;;AAIA;;;AAIA;;;;AAIA;;;AC/DA;;;;AAiEA;;;;;;;;;;;;;;;;;;AAkBA;;;;AAIA;;;AAIA;;;;;AAKA;AAEA;;;;;;;;;;ACjGA;;;;;;;;;;;;;;;;AAsBA;;AAGA;;;;AAKA;;;;;;;;;;;;;;;;;AAkBA;;;AAIA;;;AClDA;;;AAkEA;;;;;AAMA;;;AAIA;;;;;;;;;;;;;;AAcA;;;;AAKA;;;;;;AAOA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsDA;;;;;;;;;;;;;;;;;;;;;;ACjJA;;;;;AAMA;;;;;;;AAQA;;;;;;;;;;;AAYA;;;;;AAMA;;AAGA;;;;;;;;;;;;;;;;;ACjCA;;ACjBA;;;;AAWA;;;;;;;;;;;;;;ACIA;;;;;;;;;;;;;;;;AAiBA;;;;;;;;;;AAUA;;;;;;;;;;;;;;;;;;;;AC3BA;;;;;;;ACuFA;;;;;;;;;;;;;;;;;;;ACnEA","sources":["webpack://cocokits/./packages/internal/storybook-theme-switcher/src/lib/components/doc-page/MdxDocPage.tsx","webpack://cocokits/./packages/internal/storybook-theme-switcher/src/lib/components/mdx-doc/MdxCssSelectorTable.tsx","webpack://cocokits/./packages/internal/storybook-theme-switcher/src/lib/components/mdx-doc/MdxDocTabCode.tsx","webpack://cocokits/./packages/internal/storybook-theme-switcher/src/lib/components/mdx-doc/MdxDocWithTheme.tsx","webpack://cocokits/./packages/internal/storybook-theme-switcher/src/lib/components/mdx-doc/token-info/TokenSection.tsx","webpack://cocokits/./packages/internal/storybook-theme-switcher/src/lib/components/mdx-doc/token-info/TokenValuePreview.tsx","webpack://cocokits/./packages/internal/storybook-theme-switcher/src/lib/components/mdx-doc/token-info/TokenIcons.tsx","webpack://cocokits/./packages/internal/storybook-theme-switcher/src/lib/components/mdx-doc/token-info/TokenTag.tsx","webpack://cocokits/./packages/internal/storybook-theme-switcher/src/lib/components/mdx-doc/token-info/TokenValues.tsx","webpack://cocokits/./packages/internal/storybook-theme-switcher/src/lib/components/mdx-doc/token-info/TokenInfo.tsx","webpack://cocokits/./packages/internal/storybook-theme-switcher/src/lib/components/mdx-doc/MdxTokenTable.tsx","webpack://cocokits/./packages/internal/storybook-theme-switcher/src/lib/components/doc-page/DocBgEffect.tsx","webpack://cocokits/./packages/internal/storybook-theme-switcher/src/lib/components/doc-page/DocHeader.tsx","webpack://cocokits/./packages/internal/storybook-theme-switcher/src/lib/components/doc-page/DocPage.tsx","webpack://cocokits/./packages/internal/storybook-theme-switcher/src/lib/components/doc-page/DocToc.tsx","webpack://cocokits/./packages/internal/storybook-theme-switcher/src/lib/components/doc-page/DocArgTypesTable.tsx","webpack://cocokits/./packages/internal/storybook-theme-switcher/src/lib/components/doc-page/DocArgTypes.tsx","webpack://cocokits/./packages/internal/storybook-theme-switcher/src/lib/components/doc-page/AutoDocMain.tsx"],"sourcesContent":["import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport styled from 'styled-components';\nimport { DocCategory } from './DocCategory';\nimport { DocPage } from './DocPage';\nimport { DocToc } from './DocToc';\nexport const MdxDocPage = ({ children, groupTitle, toc, utilsPage, hideCckThemeSwitcher = false }) => {\n    return (_jsx(_Fragment, { children: _jsx(DocPage, { hideCckThemeSwitcher: hideCckThemeSwitcher, utilsPage: utilsPage, children: _jsxs(StyledWrapper, { children: [_jsxs(StyledMain, { children: [groupTitle && _jsx(DocCategory, { children: groupTitle }), children] }), toc && toc.length > 0 &&\n                        _jsx(DocToc, { items: toc })] }) }) }));\n};\n// region ---------------- STYLES ----------------\nexport const StyledWrapper = styled.div `\r\n    display: flex;\r\n    position: relative;\r\n    width: 100%;\r\n    margin: auto;\r\n`;\nconst StyledMain = styled.main `\r\n    flex: 1;\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: var(--cck-storybook-size-64) var(--cck-storybook-size-32) var(--cck-storybook-size-128) var(--cck-storybook-size-32);\r\n    margin: 0 auto;\r\n    z-index: 1;\r\n    min-width: 0;\r\n`;\n","import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport React from 'react';\nimport styled, { css } from 'styled-components';\nimport { cssSelectorRender, layoutClassNamesConfig } from '@cocokits/core';\nimport { useDocSelectedCckTheme } from '@cocokits/storybook-theme-switcher';\nimport { DocMarkdown } from '../doc-page/DocMarkdown';\n// eslint-disable-next-line max-lines-per-function\nexport function MdxCssSelectorTable({ componentName }) {\n    const coreClassNames = layoutClassNamesConfig[componentName];\n    const selectedCckTheme = useDocSelectedCckTheme();\n    if (!selectedCckTheme) {\n        return;\n    }\n    // const themeComponentConfig = selectedCck\n    // Theme.uiComponentConfig[componentName];\n    const { additional, component, ...restProp } = selectedCckTheme.uiComponentConfig[componentName];\n    const hasVariants = Object.values(restProp).filter(Boolean).length > 0 ||\n        Object.values(additional ?? {}).filter(Boolean).length > 0;\n    return (_jsxs(_Fragment, { children: [_jsx(StyledH2, { children: \"Layout Elements\" }), _jsx(\"p\", { children: \"Selectors in this group will always be added to the DOM element, regardless of the variant.\" }), _jsxs(\"p\", { children: [_jsx(\"strong\", { children: \"Render Condition:\" }), \" Selectors in this group will be added always to the DOM element, no patter of the variant.\"] }), _jsxs(StyledTable, { children: [_jsx(\"thead\", { children: _jsxs(\"tr\", { children: [_jsx(StyledTh, { children: \"Selector\" }), _jsx(StyledTh, { children: \"Element\" }), _jsx(StyledTh, { children: \"Description\" })] }) }), _jsx(\"tbody\", { children: Object.entries(coreClassNames.elements).map(([key, value]) => (_jsxs(StyledTr, { children: [_jsx(StyledTd, { \"$noWrap\": true, children: value.selectors }), _jsx(StyledTd, { \"$noWrap\": true, children: key }), _jsx(StyledTd, { children: _jsx(DocMarkdown, { children: value.description }) })] }, key))) })] }), hasVariants &&\n                _jsxs(_Fragment, { children: [_jsx(StyledH2, { children: \"Variants\" }), _jsxs(\"p\", { children: [_jsx(\"strong\", { children: \"Render Condition:\" }), \" These selectors will be added to the DOM when the corresponding variant group is added to the component.\"] }), Object.entries(restProp).map(([key, config]) => {\n                            if (!config) {\n                                return;\n                            }\n                            return (_jsxs(React.Fragment, { children: [_jsx(StyledH3, { children: key }), _jsxs(\"p\", { children: [\"Selectors in this group act as \", _jsx(\"code\", { children: key }), \" variants and are applied to specific layout elements.\"] }), config.description && _jsx(DocMarkdown, { children: config.description }), _jsxs(StyledTable, { children: [_jsx(\"thead\", { children: _jsxs(\"tr\", { children: [_jsx(StyledTh, { children: \"Selector\" }), _jsx(StyledTh, { children: \"Package\" }), _jsx(StyledTh, { children: \"Element\" })] }) }), _jsxs(\"tbody\", { children: [_jsxs(StyledTr, { children: [_jsx(StyledTd, { \"$noWrap\": true, children: cssSelectorRender({ block: coreClassNames.prefix, modifier: `default-${config.name}` }) }), _jsx(StyledTd, { children: selectedCckTheme.name }), _jsx(StyledTd, { \"$noWrap\": false, children: `Applied to the Host Element when no ${config.name} is defined within the component, defaulting to the selected theme's ${config.name}.` })] }, config.name + 'default'), Object.values(config.values).map(value => (_jsxs(StyledTr, { children: [_jsx(StyledTd, { \"$noWrap\": true, children: key === 'type' ? cssSelectorRender({ block: coreClassNames.prefix, element: value }) : cssSelectorRender({ block: coreClassNames.prefix, element: key, modifier: value }) }), _jsx(StyledTd, { children: selectedCckTheme.name }), _jsx(StyledTd, { \"$noWrap\": true, children: \"Host Element\" })] }, value.toString())))] })] })] }, key));\n                        }), additional &&\n                            _jsxs(_Fragment, { children: [_jsx(StyledH2, { children: \"Theme Variants\" }), _jsxs(\"p\", { children: [_jsx(\"strong\", { children: \"Render Condition:\" }), \" These selectors will be added to the DOM when the corresponding variant group is added to the component.\"] }), Object.entries(additional).map(([key, config]) => {\n                                        if (!config) {\n                                            return;\n                                        }\n                                        return (_jsxs(React.Fragment, { children: [_jsx(StyledH3, { children: key }), config.description && _jsx(DocMarkdown, { children: config.description }), _jsxs(StyledTable, { children: [_jsx(\"thead\", { children: _jsxs(\"tr\", { children: [_jsx(StyledTh, { children: \"Selector\" }), _jsx(StyledTh, { children: \"Package\" }), _jsx(StyledTh, { children: \"Element\" })] }) }), _jsx(\"tbody\", { children: Object.values(config.values).map(value => (_jsxs(StyledTr, { children: [_jsx(StyledTd, { \"$noWrap\": true, children: key === 'type' ? cssSelectorRender({ block: coreClassNames.prefix, element: value }) : cssSelectorRender({ block: coreClassNames.prefix, element: key, modifier: value }) }), _jsx(StyledTd, { children: selectedCckTheme.name }), _jsx(StyledTd, { \"$noWrap\": true, children: \"Host Element\" })] }, value.toString()))) })] })] }, key));\n                                    })] })] })] }));\n}\n// region ---------------- STYLES ----------------\nconst StyledH2 = styled.h2 `\r\n    margin-top: var(--cck-storybook-size-48)\r\n`;\nconst StyledH3 = styled.h3 `\r\n    margin-top: var(--cck-storybook-size-48)\r\n`;\nconst StyledTable = styled.table `\r\n    width: 100%;\r\n    border: var(--cck-storybook-size-1) solid var(--cck-storybook-color-bg-body-inverse-alpha-5);\r\n    border-radius: var(--cck-storybook-size-6);\r\n    border-spacing: 0;\r\n\r\n    & p {\r\n        color: inherit;\r\n        font: inherit;\r\n    }\r\n`;\nconst StyledTr = styled.tr `\r\n    font: var(--cck-storybook-text-sm-medium);\r\n    color: var(--cck-storybook-color-font-contrast-4);\r\n    padding: var(--cck-storybook-size-12) var(--cck-storybook-size-24);\r\n\r\n    &:nth-child(even) {\r\n        background-color: var(--cck-storybook-color-bg-table-even);\r\n    }\r\n`;\nconst StyledTd = styled.td `\r\n    font: var(--cck-storybook-text-sm-regular);\r\n    color: var(--cck-storybook-color-font-contrast-2);\r\n    padding: var(--cck-storybook-size-12) var(--cck-storybook-size-24);\r\n    border-top: var(--cck-storybook-size-1) solid var(--cck-storybook-color-border-alpha-default);\r\n\r\n    ${props => props.$noWrap && css `\r\n        white-space: nowrap;\r\n    `}\r\n    &:first-child {\r\n        font: var(--cck-storybook-text-sm-medium);\r\n        color: var(--cck-storybook-color-font-contrast-3);\r\n    }\r\n\r\n    & code {\r\n        font: var(--cck-storybook-text-xs-regular);\r\n        padding: var(--cck-storybook-size-2) var(--cck-storybook-size-6);\r\n    }\r\n    \r\n    & p {\r\n        margin: 0;\r\n    }\r\n`;\nconst StyledTh = styled.th `\r\n    font: var(--cck-storybook-text-sm-medium);\r\n    color: var(--cck-storybook-color-font-contrast-4);\r\n    padding: var(--cck-storybook-size-12) var(--cck-storybook-size-24);\r\n    text-align: left;\r\n`;\n","import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Source } from '@storybook/addon-docs';\nimport { useState } from 'react';\nimport styled, { css } from 'styled-components';\nexport const MdxDocTabCode = ({ codeTabs, language }) => {\n    const [activeTab, setActiveTab] = useState(Object.keys(codeTabs)[0]);\n    return (_jsxs(_Fragment, { children: [_jsx(StyledTabs, { children: Object.keys(codeTabs).map((tab) => (_jsx(StyledTabButton, { \"$isActive\": tab === activeTab, onClick: () => setActiveTab(tab), children: tab }, tab))) }), _jsx(StyledPre, { children: _jsx(Source, { language: language, code: codeTabs[activeTab] }) })] }));\n};\n// region ---------------- STYLES ----------------\nconst StyledTabs = styled.div `\r\n    display: flex;\r\n    margin: 0 4px;\r\n`;\nconst StyledTabButton = styled.button `\r\n    padding: 10px 16px;\r\n    outline: none;\r\n    cursor: pointer;\r\n    border: none;\r\n    border-radius: 4px 4px 0 0;\r\n    background-color: transparent;\r\n    font: var(--cck-storybook-text-sm-regular);\r\n    color: var(--cck-storybook-color-font-contrast-3);\r\n\r\n    ${props => props.$isActive && css `\r\n        background-color: var(--cck-storybook-color-brand-alpha-4);\r\n        border-bottom: 2px solid var(--cck-storybook-color-brand-default);\r\n    `}\r\n`;\nconst StyledPre = styled.pre `\r\n    margin: 0;\r\n\r\n    .docblock-source {\r\n        margin: 0;\r\n    }\r\n`;\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Markdown } from '@storybook/addon-docs';\nimport { useDocSelectedCckTheme } from '../../hooks/useDocSelectedCckTheme';\nexport const MdxDocWithTheme = ({ fn }) => {\n    const cckTheme = useDocSelectedCckTheme();\n    if (!cckTheme) {\n        return;\n    }\n    const children = fn(cckTheme);\n    if (typeof children === 'string') {\n        return (_jsx(Markdown, { children: children.trim() }));\n    }\n    if (Array.isArray(children)) {\n        return children.map(child => {\n            if (typeof child === 'string') {\n                return (_jsx(Markdown, { children: child.trim() }));\n            }\n            return child;\n        });\n    }\n    return children;\n};\n","import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport styled from 'styled-components';\nexport function TokenSection({ title, children }) {\n    return (_jsxs(StylesWrapper, { children: [_jsxs(StylesTitle, { children: [title, \":\"] }), children] }));\n}\nconst StylesWrapper = styled.div `\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 4px;\r\n`;\nconst StylesTitle = styled.div `\r\n    font: var(--cck-storybook-text-xs-regular);\r\n    color: var(--cck-storybook-color-font-contrast-1);\r\n`;\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport styled from 'styled-components';\nexport function TokenValuePreview({ token, tokenMap }) {\n    const getItemValues = (mode) => {\n        const tokenValues = token.modes[mode];\n        if (tokenValues.aliasHierarchies && tokenValues.aliasHierarchies.length > 0) {\n            const finalTokenValues = tokenValues.aliasHierarchies.flatMap(alias => {\n                const lastAliasToke = alias.at(-1);\n                if (!lastAliasToke) {\n                    return [];\n                }\n                const lastTokenValue = tokenMap[lastAliasToke.tokenId].modes[lastAliasToke.modeName];\n                return [lastTokenValue.value];\n            });\n            return finalTokenValues;\n        }\n        return [tokenValues.value];\n    };\n    const itemsValue = Object.keys(token.modes).flatMap(mode => getItemValues(mode));\n    const gridSize = Math.ceil(Math.sqrt(itemsValue.length));\n    if (token.type === 'color') {\n        return (_jsx(StylesWrapper, { \"$gridSize\": gridSize, children: itemsValue.map(bgColor => _jsx(StylesColorItem, { \"$bg\": bgColor })) }));\n    }\n    if (token.type === 'dimension') {\n        return (_jsx(StylesWrapper, { \"$gridSize\": gridSize, children: itemsValue.map(dimension => _jsx(StylesDimensionItem, { children: dimension })) }));\n    }\n    return;\n}\nconst StylesWrapper = styled.div `\r\n    width: 100px;\r\n    display: grid;\r\n    grid-template-columns: ${({ $gridSize }) => `repeat(${$gridSize}, 1fr)`};\r\n    grid-template-rows: ${({ $gridSize }) => `repeat(${$gridSize}, 1fr)`};\r\n    gap: 4px;\r\n`;\nconst StylesColorItem = styled.div `\r\n    aspect-ratio: 1 / 1;\r\n    border-radius: 6px;\r\n    background-color: ${({ $bg }) => `${$bg}`};\r\n    border: 1px solid var(--cck-storybook-color-border-alpha-default);\r\n`;\nconst StylesDimensionItem = styled.div `\r\n    aspect-ratio: 1 / 1;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    border-radius: 6px;\r\n    border: 1px solid var(--cck-storybook-color-border-alpha-default);\r\n    font: var(--cck-storybook-text-xs-regular);\r\n    color: var(--cck-storybook-color-font-contrast-4);\r\n`;\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport styled from 'styled-components';\nexport function TokenColorIcon() {\n    return (_jsxs(StylesColorSvgIcon, { width: \"16\", height: \"16\", viewBox: \"0 0 16 16\", xmlns: \"http://www.w3.org/2000/svg\", children: [_jsx(\"path\", { d: \"M5.25 8C5.80228 8 6.25 7.55228 6.25 7C6.25 6.44772 5.80228 6 5.25 6C4.69772 6 4.25 6.44772 4.25 7C4.25 7.55228 4.69772 8 5.25 8Z\" }), _jsx(\"path\", { d: \"M8.75 5C8.75 5.55228 8.30229 6 7.75 6C7.19772 6 6.75 5.55228 6.75 5C6.75 4.44772 7.19772 4 7.75 4C8.30229 4 8.75 4.44772 8.75 5Z\" }), _jsx(\"path\", { d: \"M10.75 7C11.3023 7 11.75 6.55228 11.75 6C11.75 5.44772 11.3023 5 10.75 5C10.1977 5 9.75 5.44772 9.75 6C9.75 6.55228 10.1977 7 10.75 7Z\" }), _jsx(\"path\", { fillRule: \"evenodd\", clipRule: \"evenodd\", d: \"M14 7.5C14 9.03144 12.6866 9.43713 11.669 9.75148C11.0253 9.9503 10.5 10.1126 10.5 10.5V11.5C10.5 13.5 9.04555 14 8 14C4.68629 14 2 11.3137 2 8C2 4.68629 4.68629 2 8 2C11.5 2 14 3.5 14 7.5ZM8 13C5.23858 13 3 10.7614 3 8C3 5.23858 5.23858 3 8 3C9.62994 3 10.864 3.35255 11.6768 4.02193C12.4539 4.66187 13 5.71978 13 7.5C13 7.85645 12.8893 8.0357 12.7546 8.16724C12.5832 8.33456 12.3107 8.47897 11.9137 8.62076C11.7383 8.68339 11.5622 8.73781 11.3722 8.79651L11.3117 8.81522C11.1118 8.87712 10.8809 8.94932 10.6717 9.03399C10.4724 9.11467 10.2052 9.23997 9.97809 9.44624C9.72138 9.67938 9.5 10.0345 9.5 10.5V11.5C9.5 12.2259 9.25348 12.5396 9.03769 12.7033C8.7743 12.9031 8.389 13 8 13Z\" })] }));\n}\nexport function TokenDimensionIcon() {\n    return (_jsx(StylesDimensionSvgIcon, { viewBox: \"0 0 17 18\", xmlns: \"http://www.w3.org/2000/svg\", children: _jsx(\"path\", { fillRule: \"evenodd\", clipRule: \"evenodd\", d: \"M5.4597 0.670462C5.91803 0.712111 6.24803 1.11528 6.19803 1.57342L5.84303 4.76042H11.573L11.9447 1.42348C11.9947 0.967005 12.408 0.628812 12.8664 0.670462C13.3247 0.712111 13.6547 1.11528 13.6047 1.57342L13.2497 4.76042H15.833C16.293 4.76042 16.6664 5.1336 16.6664 5.59341C16.6664 6.05322 16.293 6.4264 15.833 6.4264H13.0664L12.5097 11.4243H15.833C16.293 11.4243 16.6664 11.7975 16.6664 12.2573C16.6664 12.7171 16.293 13.0903 15.833 13.0903H12.3247L11.9364 16.5772C11.8864 17.0336 11.473 17.3718 11.0147 17.3302C10.5564 17.2885 10.2264 16.8854 10.2764 16.4272L10.648 13.0903H4.91636L4.52969 16.5772C4.47969 17.0336 4.06636 17.3718 3.60803 17.3302C3.14969 17.2885 2.81803 16.8854 2.8697 16.4272L3.23969 13.0903H0.833028C0.373028 13.0903 -0.000305176 12.7171 -0.000305176 12.2573C-0.000305176 11.7975 0.373028 11.4243 0.833028 11.4243H3.42636L3.98136 6.4264H0.833028C0.373028 6.4264 -0.000305176 6.05322 -0.000305176 5.59341C-0.000305176 5.1336 0.373028 4.76042 0.833028 4.76042H4.16636L4.53803 1.42348C4.58803 0.967005 5.00136 0.628812 5.4597 0.670462ZM10.833 11.4243L11.388 6.4264H5.65803L5.10136 11.4243H10.833Z\" }) }));\n}\nexport function TokenTextIcon() {\n    return (_jsx(StylesTextSvgIcon, { viewBox: \"0 0 16 15\", xmlns: \"http://www.w3.org/2000/svg\", children: _jsx(\"path\", { fillRule: \"evenodd\", clipRule: \"evenodd\", d: \"M2.49967 1.99967V2.67275C2.49967 3.13299 2.12658 3.50609 1.66634 3.50609C1.2061 3.50609 0.833008 3.13299 0.833008 2.67275V1.64711C0.833008 0.928888 1.4118 0.333008 2.14253 0.333008H14.5235C15.2542 0.333008 15.833 0.92889 15.833 1.64711V2.67275C15.833 3.13299 15.4599 3.50609 14.9997 3.50609C14.5394 3.50609 14.1663 3.13299 14.1663 2.67275V1.99967H9.16634V12.833H11.1902C11.6504 12.833 12.0235 13.2061 12.0235 13.6663C12.0235 14.1266 11.6504 14.4997 11.1902 14.4997H5.47587C5.01563 14.4997 4.64253 14.1266 4.64253 13.6663C4.64253 13.2061 5.01563 12.833 5.47587 12.833H7.49967V1.99967H2.49967Z\" }) }));\n}\nexport function TokenEffectIcon() {\n    return (_jsx(StylesEffectSvgIcon, { viewBox: \"0 0 512 512\", xmlns: \"http://www.w3.org/2000/svg\", children: _jsx(\"path\", { d: \"M280 24l0 64c0 13.3-10.7 24-24 24s-24-10.7-24-24l0-64c0-13.3 10.7-24 24-24s24 10.7 24 24zm157 84.9l-45.3 45.3c-9.4 9.4-24.6 9.4-33.9 0s-9.4-24.6 0-33.9L403.1 75c9.4-9.4 24.6-9.4 33.9 0s9.4 24.6 0 33.9zM108.9 75l45.3 45.3c9.4 9.4 9.4 24.6 0 33.9s-24.6 9.4-33.9 0L75 108.9c-9.4-9.4-9.4-24.6 0-33.9s24.6-9.4 33.9 0zM24 232l64 0c13.3 0 24 10.7 24 24s-10.7 24-24 24l-64 0c-13.3 0-24-10.7-24-24s10.7-24 24-24zm400 0l64 0c13.3 0 24 10.7 24 24s-10.7 24-24 24l-64 0c-13.3 0-24-10.7-24-24s10.7-24 24-24zM154.2 391.8L108.9 437c-9.4 9.4-24.6 9.4-33.9 0s-9.4-24.6 0-33.9l45.3-45.3c9.4-9.4 24.6-9.4 33.9 0s9.4 24.6 0 33.9zm237.6-33.9L437 403.1c9.4 9.4 9.4 24.6 0 33.9s-24.6 9.4-33.9 0l-45.3-45.3c-9.4-9.4-9.4-24.6 0-33.9s24.6-9.4 33.9 0zM280 424l0 64c0 13.3-10.7 24-24 24s-24-10.7-24-24l0-64c0-13.3 10.7-24 24-24s24 10.7 24 24zm40-168a64 64 0 1 0 -128 0 64 64 0 1 0 128 0zm-176 0a112 112 0 1 1 224 0 112 112 0 1 1 -224 0z\" }) }));\n}\nexport function TokenArrowDownIcon() {\n    return (_jsx(StylesArrowDownSvgIcon, { height: \"17\", viewBox: \"0 0 9 17\", xmlns: \"http://www.w3.org/2000/svg\", children: _jsx(\"path\", { d: \"M4.14645 16.3536C4.34171 16.5488 4.65829 16.5488 4.85355 16.3536L8.03553 13.1716C8.2308 12.9763 8.2308 12.6597 8.03553 12.4645C7.84027 12.2692 7.52369 12.2692 7.32843 12.4645L4.5 15.2929L1.67157 12.4645C1.47631 12.2692 1.15973 12.2692 0.964466 12.4645C0.769203 12.6597 0.769203 12.9763 0.964466 13.1716L4.14645 16.3536ZM4 1C4 1.27614 4.22386 1.5 4.5 1.5C4.77614 1.5 5 1.27614 5 1L4 1ZM5 3C5 2.72386 4.77614 2.5 4.5 2.5C4.22386 2.5 4 2.72386 4 3L5 3ZM4 5C4 5.27614 4.22386 5.5 4.5 5.5C4.77614 5.5 5 5.27614 5 5L4 5ZM5 7C5 6.72386 4.77614 6.5 4.5 6.5C4.22386 6.5 4 6.72386 4 7L5 7ZM4 9C4 9.27614 4.22386 9.5 4.5 9.5C4.77614 9.5 5 9.27614 5 9L4 9ZM5 11C5 10.7239 4.77614 10.5 4.5 10.5C4.22386 10.5 4 10.7239 4 11L5 11ZM4 13C4 13.2761 4.22386 13.5 4.5 13.5C4.77614 13.5 5 13.2761 5 13L4 13ZM5 15C5 14.7239 4.77614 14.5 4.5 14.5C4.22386 14.5 4 14.7239 4 15L5 15ZM4 -2.18557e-08L4 1L5 1L5 2.18557e-08L4 -2.18557e-08ZM4 3L4 5L5 5L5 3L4 3ZM4 7L4 9L5 9L5 7L4 7ZM4 11L4 13L5 13L5 11L4 11ZM4 15L4 16L5 16L5 15L4 15Z\" }) }));\n}\nexport function TokenArrowHeadRightIcon() {\n    return (_jsx(StylesArrowHeadIcon, { viewBox: \"0 0 8 14\", xmlns: \"http://www.w3.org/2000/svg\", children: _jsx(\"path\", { d: \"M5.53585 7L0.29285 1.72124C-0.0976156 1.32748 -0.0976165 0.689074 0.292849 0.295317C0.683314 -0.0984392 1.31638 -0.0984391 1.70685 0.295318L7.65674 6.28693C8.04727 6.68075 8.04727 7.31925 7.65674 7.71307L1.70685 13.7047C1.31638 14.0984 0.683314 14.0984 0.292849 13.7047C-0.0976164 13.3109 -0.0976162 12.6725 0.292849 12.2788L5.53585 7Z\" }) }));\n}\nexport function TokenArrowHeadLeftIcon() {\n    return (_jsx(StylesArrowHeadIcon, { viewBox: \"0 0 8 14\", xmlns: \"http://www.w3.org/2000/svg\", children: _jsx(\"path\", { d: \"M2.41379 7L7.65679 12.2788C8.04725 12.6725 8.04725 13.3109 7.65679 13.7047C7.26632 14.0984 6.63325 14.0984 6.24279 13.7047L0.292893 7.71307C-0.0976314 7.31925 -0.0976308 6.68075 0.292894 6.28693L6.24279 0.295317C6.63325 -0.0984392 7.26632 -0.0984391 7.65679 0.295318C8.04725 0.689074 8.04725 1.32748 7.65679 1.72124L2.41379 7Z\" }) }));\n}\nconst StylesArrowHeadIcon = styled.svg `\r\n    flex-shrink: 0;\r\n    width: 18px;\r\n    height: 14px;\r\n\r\n    & path {\r\n        fill: var(--cck-storybook-color-font-contrast-2);\r\n    }\r\n`;\nconst StylesEffectSvgIcon = styled.svg `\r\n    flex-shrink: 0;\r\n    width: 18px;\r\n    height: 17px;\r\n    fill: var(--cck-storybook-color-font-contrast-2);\r\n`;\nconst StylesTextSvgIcon = styled.svg `\r\n    flex-shrink: 0;\r\n    width: 13px;\r\n    height: 12px;\r\n    fill: none;\r\n\r\n    & path {\r\n        fill: var(--cck-storybook-color-font-contrast-2);\r\n    }\r\n`;\nconst StylesDimensionSvgIcon = styled.svg `\r\n    flex-shrink: 0;\r\n    width: 14px;\r\n    height: 15px;\r\n    fill: none;\r\n\r\n    & path {\r\n        fill: var(--cck-storybook-color-font-contrast-2);\r\n    }\r\n`;\nconst StylesColorSvgIcon = styled.svg `\r\n    flex-shrink: 0;\r\n    width: 20px;\r\n    height: 20px;\r\n    fill: none;\r\n\r\n    & path {\r\n        fill: var(--cck-storybook-color-font-contrast-2);\r\n    }\r\n`;\nconst StylesArrowDownSvgIcon = styled.svg `\r\n    flex-shrink: 0;\r\n    width: 9px;\r\n    fill: none;\r\n\r\n    & path {\r\n        fill: var(--cck-storybook-color-font-contrast-2);\r\n    }\r\n`;\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport styled, { css } from 'styled-components';\nimport { TokenColorIcon, TokenDimensionIcon, TokenEffectIcon, TokenTextIcon } from './TokenIcons';\nexport function TokenTag({ type, text, collectionName, modeName, compact = false }) {\n    return (_jsxs(StylesWrapper, { \"$hasGap\": !!collectionName || !!modeName, \"$compact\": compact, children: [_jsxs(StyledValueWrapper, { children: [getTokenIconType(type), _jsx(StyledValue, { \"$compact\": compact, children: text })] }), _jsxs(StyledGroupWrapper, { children: [collectionName &&\n                        _jsxs(StyledGroupRow, { children: [_jsx(StyledTitle, { children: \"Collection:\" }), _jsx(StyledText, { children: collectionName })] }), modeName &&\n                        _jsxs(StyledGroupRow, { children: [_jsx(StyledTitle, { children: \"Mode:\" }), _jsx(StyledText, { children: modeName })] })] })] }));\n}\nfunction getTokenIconType(type) {\n    switch (type) {\n        case 'color':\n            return _jsx(TokenColorIcon, {});\n        case 'dimension':\n            return _jsx(TokenDimensionIcon, {});\n        case 'typography':\n        case 'string':\n            return _jsx(TokenTextIcon, {});\n        case 'shadow':\n        default:\n            return _jsx(TokenEffectIcon, {});\n    }\n}\nconst StylesWrapper = styled.div `\r\n    width: fit-content;\r\n    display: flex;\r\n    flex-direction: column;\r\n    border-radius: 6px;\r\n\r\n    ${props => !props.$compact && css `\r\n      padding: 6px 12px;\r\n      background-color: var(--cck-storybook-color-bg-body-inverse-alpha-2);\r\n      border: 1px solid var(--cck-storybook-color-border-alpha-default);\r\n  `}\r\n\r\n    ${props => props.$compact && css `\r\n      padding: 2px 12px;\r\n    `}\r\n    \r\n    ${props => props.$hasGap && css `\r\n      gap: 12px;\r\n    `}\r\n`;\nconst StyledValueWrapper = styled.div `\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 8px;\r\n`;\nconst StyledGroupWrapper = styled.div `\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n`;\nconst StyledGroupRow = styled.div `\r\n    display: flex;\r\n    gap: 4px;\r\n`;\nconst StyledTitle = styled.div `\r\n    font: var(--cck-storybook-text-xs-regular);\r\n    color: var(--cck-storybook-color-font-contrast-2);\r\n`;\nconst StyledText = styled.div `\r\n    font: var(--cck-storybook-text-xs-medium);\r\n    color: var(--cck-storybook-color-font-contrast-3);\r\n`;\nconst StyledValue = styled.div `\r\n    font: var(--cck-storybook-text-sm-medium);\r\n    color: var(--cck-storybook-color-font-contrast-4);\r\n\r\n    ${props => props.$compact && css `\r\n      color: var(--cck-storybook-color-font-contrast-2);\r\n    `}\r\n`;\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport React, { useEffect, useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport { TokenArrowDownIcon, TokenArrowHeadLeftIcon, TokenArrowHeadRightIcon } from './TokenIcons';\nimport { TokenTag } from './TokenTag';\nfunction toTokenValueHierarchy(aliasHierarchy) {\n    return {\n        tokenId: aliasHierarchy.tokenId,\n        type: aliasHierarchy.type,\n        collectionName: aliasHierarchy.collectionName,\n        modeName: aliasHierarchy.modeName,\n        text: aliasHierarchy.namePath.join(' / ')\n    };\n}\n// eslint-disable-next-line max-lines-per-function\nexport function TokenValues({ token, tokenMap }) {\n    const [selectedIndex, setSelectedIndex] = useState(0);\n    const hierarchies = Object.entries(token.modes)\n        .flatMap(([modeName, tokenValue]) => {\n        if (tokenValue.aliasHierarchies) {\n            return tokenValue.aliasHierarchies.map(aliasHierarchy => {\n                const lastAliasHierarchyToken = aliasHierarchy[aliasHierarchy.length - 1];\n                const lastAliasToken = tokenMap[lastAliasHierarchyToken.tokenId];\n                return [\n                    {\n                        tokenId: token.id,\n                        type: token.type,\n                        modeName,\n                        text: token.namePath.join(' / ')\n                    },\n                    ...aliasHierarchy.map(toTokenValueHierarchy),\n                    {\n                        tokenId: lastAliasHierarchyToken.tokenId,\n                        type: lastAliasHierarchyToken.type,\n                        text: lastAliasToken.modes[lastAliasHierarchyToken.modeName].value\n                    }\n                ];\n            });\n        }\n        return [\n            [\n                {\n                    tokenId: token.id,\n                    type: token.type,\n                    modeName,\n                    text: token.namePath.join(' / ')\n                },\n                {\n                    tokenId: token.id,\n                    type: token.type,\n                    text: tokenValue.value\n                }\n            ]\n        ];\n    });\n    useEffect(() => {\n        setSelectedIndex(0);\n    }, [token]);\n    const maxIndex = hierarchies.length - 1;\n    const minIndex = 0;\n    return (_jsxs(StylesContainer, { children: [_jsx(StylesWrapper, { \"$selectedIndex\": selectedIndex, children: hierarchies.map((hierarchy, i) => (_jsx(StylesHierarchyWrapper, { children: hierarchy.map((h, index) => (_jsxs(React.Fragment, { children: [_jsx(TokenTag, { ...h }), (index !== (hierarchy.length - 1)) &&\n                                _jsx(TokenArrowDownIcon, {})] }, index))) }, i))) }), selectedIndex > minIndex &&\n                _jsx(StylesButton, { \"$position\": \"left\", onClick: () => setSelectedIndex(Math.max(selectedIndex - 1, minIndex)), children: _jsx(TokenArrowHeadLeftIcon, {}) }), selectedIndex < maxIndex &&\n                _jsx(StylesButton, { \"$position\": \"right\", onClick: () => setSelectedIndex(Math.min(selectedIndex + 1, maxIndex)), children: _jsx(TokenArrowHeadRightIcon, {}) })] }));\n}\nconst StylesContainer = styled.div `\r\n    display: flex;\r\n    overflow: hidden;\r\n    position: relative;\r\n`;\nconst StylesButton = styled.div `\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 36px;\r\n    height: 36px;\r\n    border-radius: 50%;\r\n    position: absolute;\r\n    border: 1px solid var(--cck-storybook-color-border-alpha-default);\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n    z-index: 1;\r\n    cursor: pointer;\r\n    \r\n    &:hover {\r\n        background-color: var(--cck-storybook-color-border-alpha-2);\r\n    }\r\n\r\n    ${props => props.$position === 'left' && css `\r\n        left: 0px;\r\n    `}\r\n\r\n    ${props => props.$position === 'right' && css `\r\n        right: 0px;\r\n    `}\r\n`;\nconst StylesWrapper = styled.div `\r\n    width: 100%;\r\n    display: flex;\r\n    transition: transform 300ms;\r\n\r\n    transform: ${({ $selectedIndex }) => `translateX(-${$selectedIndex}00%)`};;\r\n`;\nconst StylesHierarchyWrapper = styled.div `\r\n    flex-shrink: 0;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    gap: 6px;\r\n    margin: 12px;\r\n    width: calc(100% - 24px);\r\n    height: calc(100% - 24px);\r\n`;\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport styled from 'styled-components';\nimport { TokenSection } from './TokenSection';\nimport { TokenValuePreview } from './TokenValuePreview';\nimport { TokenValues } from './TokenValues';\nimport { hasTokenPreview } from './utils';\nexport function TokenInfo({ token, tokenMap, close }) {\n    const hasPreview = hasTokenPreview(token);\n    return (_jsxs(StylesWrapper, { children: [_jsxs(StylesHeader, { children: [_jsx(\"h3\", { children: \"Token Info\" }), _jsx(StyledCloseButton, { onClick: () => close(), children: _jsx(\"svg\", { width: \"14\", height: \"14\", viewBox: \"0 0 14 14\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", children: _jsx(\"path\", { d: \"M13 1L1 13M1 1L13 13\", strokeOpacity: \"0.6\", strokeWidth: \"2\", strokeLinecap: \"round\", strokeLinejoin: \"round\" }) }) })] }), _jsxs(StylesContent, { children: [_jsxs(StylesRow, { children: [_jsx(TokenSection, { title: \"Name\", children: _jsx(StylesName, { children: token.namePath.join(' / ') }) }), hasPreview &&\n                                _jsx(TokenSection, { title: \"Preview\", children: _jsx(TokenValuePreview, { token: token, tokenMap: tokenMap }) })] }), _jsx(TokenSection, { title: \"Value Hierarchy\", children: _jsx(TokenValues, { token: token, tokenMap: tokenMap }) }), _jsx(TokenSection, { title: \"CSS Variable\", children: _jsx(\"code\", { children: token.variable.css }) }), _jsx(TokenSection, { title: \"SCSS Variable\", children: _jsx(\"code\", { children: token.variable.scss }) })] })] }));\n}\nconst StylesWrapper = styled.div `\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    background-color: var(--cck-storybook-color-bg-body-inverse-alpha-2);\r\n    border: 1px solid var(--cck-storybook-color-border-alpha-default);\r\n    padding: 12px 12px 12px 24px;\r\n    border-radius: 6px;\r\n\r\n    & code {\r\n        align-self: baseline;\r\n        font: var(--cck-storybook-text-sm-regular);\r\n        padding: var(--cck-storybook-size-2) var(--cck-storybook-size-6);\r\n        color: var(--cck-storybook-color-font-contrast-4);\r\n    }\r\n`;\nconst StylesHeader = styled.div `\r\n    display: flex;\r\n`;\nconst StylesContent = styled.div `\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 32px;\r\n`;\nconst StyledCloseButton = styled.button `\r\n    border: none;\r\n    outline: none;\r\n    background-color: transparent;\r\n    width: 40px;\r\n    height: 40px;\r\n    border-radius: 50%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    cursor: pointer;\r\n    margin-left: auto;\r\n    stroke: var(--cck-storybook-color-font-contrast-3);\r\n    \r\n    &:hover {\r\n        background-color: var(--cck-storybook-color-bg-body-inverse-alpha-5);\r\n    }\r\n`;\nconst StylesRow = styled.div `\r\n    display: flex;\r\n    justify-content: space-between;\r\n`;\nconst StylesName = styled.div `\r\n    font: var(--cck-storybook-text-md-regular);\r\n    color: var(--cck-storybook-color-font-contrast-4);\r\n`;\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useMemo, useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport { recordForEach } from '@cocokits/common-utils';\nimport { useDocSelectedCckTheme } from '@cocokits/storybook-theme-switcher';\nimport { TokenInfo } from './token-info/TokenInfo';\nimport { TokenTag } from './token-info/TokenTag';\n// eslint-disable-next-line max-lines-per-function\nexport function MdxTokenTable() {\n    const selectedCckTheme = useDocSelectedCckTheme();\n    if (!selectedCckTheme) {\n        return;\n    }\n    const tokenDictionary = selectedCckTheme.tokenDictionary;\n    const [selectedCollection, setSelectedCollection] = useState(tokenDictionary.collectionNames[0].name);\n    const [selectedToken, setSelectedToken] = useState(null);\n    // Reset state when the theme changes.\n    //\n    // Changing the theme can leave the component with outdated state,\n    // potentially leading to errors since the old state might not be\n    // valid for the new theme. Resetting the state ensures compatibility\n    // and proper functionality with the selected theme.\n    const selectedCollectionValid = tokenDictionary.collectionNames.some(collection => collection.name === selectedCollection);\n    if (!selectedCollectionValid) {\n        setSelectedCollection(tokenDictionary.collectionNames[0].name);\n        setSelectedToken(null);\n        return;\n    }\n    const modes = tokenDictionary.collectionModeNames[selectedCollection].map(mode => mode.name);\n    const getTokenList = (groupOrTokenIds, groupNames = '') => {\n        const result = [];\n        recordForEach(groupOrTokenIds, (childGroupOrTokenIds, groupOrTokenIdsKey) => {\n            if (Array.isArray(childGroupOrTokenIds)) {\n                // A collection can have token without any group. So token generators create an empty group fo them.\n                // But we don't need to show the empty group in ui\n                groupOrTokenIdsKey.startsWith('__')\n                    ? result.push('')\n                    : result.push(groupNames + groupOrTokenIdsKey);\n                childGroupOrTokenIds.forEach((tokenId) => {\n                    result.push(tokenDictionary.tokenMap[tokenId]);\n                });\n            }\n            else {\n                const currentGroupNames = groupOrTokenIdsKey.startsWith(\"__\")\n                    ? groupNames + '/'\n                    : groupNames + groupOrTokenIdsKey + '/';\n                result.push(...getTokenList(childGroupOrTokenIds, currentGroupNames));\n            }\n        });\n        return result;\n    };\n    const tokenList = useMemo(() => {\n        return getTokenList(tokenDictionary.collectionGroupHierarchy[selectedCollection]);\n    }, [tokenDictionary.collectionGroupHierarchy, selectedCollection]);\n    return (_jsxs(StyledWrapper, { children: [_jsxs(StyledTokensWrapper, { children: [_jsx(StyledCollectionWrapper, { children: tokenDictionary.collectionNames.map(collectionName => _jsx(StyledCollection, { \"$selected\": selectedCollection === collectionName.name, onClick: () => setSelectedCollection(collectionName.name), children: _jsx(\"span\", { children: collectionName.name }) }, collectionName.name)) }), _jsxs(StyledTable, { children: [_jsx(\"thead\", { children: _jsxs(\"tr\", { className: 'header', children: [_jsx(\"th\", { children: \"Name\" }), modes.map(mode => _jsx(\"th\", { children: mode }, mode))] }) }), _jsx(\"tbody\", { children: tokenList.map(tokenOrGroupName => {\n                                    if (typeof tokenOrGroupName === 'string') {\n                                        return (_jsx(\"tr\", { className: 'group', children: _jsx(\"td\", { colSpan: modes.length + 1, children: tokenOrGroupName }) }, tokenOrGroupName));\n                                    }\n                                    return (_jsxs(\"tr\", { className: selectedToken?.id === tokenOrGroupName.id ? 'selected' : '', onClick: () => setSelectedToken(tokenDictionary.tokenMap[tokenOrGroupName.id]), children: [_jsx(\"td\", { children: _jsx(StyledTableName, { children: tokenOrGroupName.namePath.at(-1) }) }), modes.map(mode => {\n                                                const aliasTokenId = tokenOrGroupName.modes[mode].aliasTokenId;\n                                                if (aliasTokenId) {\n                                                    const aliasToken = tokenDictionary.tokenMap[aliasTokenId];\n                                                    return (_jsx(\"td\", { children: _jsx(TokenTag, { tokenId: aliasToken.id, type: aliasToken.type, text: aliasToken.namePath.join(' / '), compact: true }) }, aliasToken.id));\n                                                }\n                                                return (_jsx(\"td\", { children: _jsx(TokenTag, { tokenId: tokenOrGroupName.id, type: tokenOrGroupName.type, text: tokenOrGroupName.modes[mode].value, compact: true }) }, tokenOrGroupName.id));\n                                            })] }, tokenOrGroupName.id));\n                                }) })] })] }), selectedToken &&\n                _jsx(StyledTokenInfoWrapper, { children: _jsx(TokenInfo, { token: selectedToken, tokenMap: tokenDictionary.tokenMap, close: () => setSelectedToken(null) }) })] }));\n}\n// region ---------------- STYLES ----------------\nconst StyledWrapper = styled.div `\r\n    display: flex;\r\n    gap: 24px;\r\n`;\nconst StyledTokensWrapper = styled.div `\r\n    flex: 1;\r\n    display: flex;\r\n    flex-direction: column;\r\n    overflow: auto;\r\n`;\nconst StyledCollectionWrapper = styled.div `\r\n    display: flex;\r\n    gap: 12px;\r\n`;\nconst StyledCollection = styled.div `\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    font: var(--cck-storybook-text-sm-medium);\r\n    color: var(--cck-storybook-color-font-contrast-4);\r\n    border: 1px solid var(--cck-storybook-color-border-alpha-2);\r\n    border-radius: 500px;\r\n    padding: 4px 20px;\r\n    background-color: var(--cck-storybook-color-bg-body-inverse-alpha-2);\r\n    cursor: pointer;\r\n    white-space: nowrap;\r\n    text-overflow: ellipsis;\r\n\r\n    ${props => props.$selected && css `\r\n        background-color: var(--cck-storybook-color-brand-alpha-6);\r\n        border: 1px solid var(--cck-storybook-color-brand-default);\r\n    `}\r\n`;\nconst StyledTokenInfoWrapper = styled.div `\r\n    width: 400px;\r\n    flex-shrink: 0;\r\n    align-self: baseline;\r\n    position: sticky;\r\n    top: 80px;\r\n`;\nconst StyledTable = styled.table `\r\n    border: none;\r\n    border-spacing: 0;\r\n    margin-top: 32px;\r\n    \r\n    & th {\r\n        font: var(--cck-storybook-text-sm-regular);\r\n        color: var(--cck-storybook-color-font-contrast-4);\r\n        border: 1px solid var(--cck-storybook-color-border-alpha-default);\r\n        border-left-width: 0;\r\n        height: 40px;\r\n        padding: 0 16px;\r\n        text-align: left;\r\n    }\r\n    \r\n    & tr:not(.group):not(.header) {\r\n        cursor: pointer;\r\n    }\r\n\r\n    & tr:not(.group):not(.selected):not(.header):hover {\r\n        background-color: var(--cck-storybook-color-brand-alpha-3);\r\n    }\r\n    \r\n    & tr.selected {\r\n        background-color: var(--cck-storybook-color-brand-alpha-5);\r\n    }\r\n\r\n    & th:first-of-type {\r\n        border-left-width: 1px;\r\n    }\r\n    \r\n    & tr.group td {\r\n        font: var(--cck-storybook-text-sm-semibold);\r\n        color: var(--cck-storybook-color-font-contrast-4);\r\n        min-height: 40px;\r\n        padding-top: 32px;\r\n        padding-bottom: 12px;\r\n    }\r\n\r\n    & tr.group + tr td {\r\n        border-top-width: 1px;\r\n    }\r\n    \r\n    & tr:not(.group) td {\r\n        border: 1px solid var(--cck-storybook-color-border-card-default);\r\n        border-top-width: 0;\r\n        border-left-width: 0;\r\n        padding: 0 16px;\r\n    }\r\n\r\n    & tr:not(.group) td:first-of-type {\r\n        border-left-width: 1px;\r\n    }\r\n`;\nconst StyledTableName = styled.div `\r\n    display: flex;\r\n    align-items: center;\r\n    font: var(--cck-storybook-text-sm-regular);\r\n    color: var(--cck-storybook-color-font-contrast-4);\r\n    min-height: 40px;\r\n`;\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport styled from 'styled-components';\nexport function DocBgEffect() {\n    return (_jsxs(Wrapper, { children: [_jsx(BrandGradiant, {}), _jsxs(BoxWrapper, { children: [_jsx(Box, {}), _jsx(Box, {}), _jsx(Box, {}), _jsx(Box, {})] }), _jsx(SharkEffect, { children: _jsx(SharkEffectImg, { src: \"/doc-page-header-effect-shark.png\" }) }), _jsx(Overlay, {})] }));\n}\n// region ---------------- STYLES ----------------\nconst Wrapper = styled.div `\r\n    height: var(--cck-storybook-size-480);\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    \r\n    position: absolute;\r\n    left: var(--cck-storybook-size-0);\r\n    right: var(--cck-storybook-size-0);\r\n    top: var(--cck-storybook-size-0);\r\n\r\n    overflow: hidden;\r\n`;\nconst BrandGradiant = styled.div `\r\n    background: var(--cck-storybook-effect-gradient-doc-page-header-brand);\r\n    height: 100%;\r\n    position: absolute;\r\n    width: 100%;\r\n`;\nconst BoxWrapper = styled.div `\r\n    position: absolute;\r\n    display: flex;\r\n    align-items: baseline;\r\n    gap: var(--cck-storybook-size-24);\r\n    height: 100%;\r\n    width: var(--cck-storybook-size-1280);\r\n`;\nconst Box = styled.div `\r\n    width: 25%;\r\n    aspect-ratio: 1 / 1;\r\n    flex: 1;\r\n    \r\n    border-width: 0 var(--cck-storybook-size-1) 0 var(--cck-storybook-size-1);\r\n    border-style: solid;\r\n    border-color: var(--cck-storybook-color-border-alpha-4);\r\n    border-radius: var(--cck-storybook-size-24);\r\n    background: var(--cck-storybook-effect-gradient-doc-page-header-box);\r\n    transform: rotate(45deg);\r\n`;\nconst SharkEffect = styled.div `\r\n    position: absolute;\r\n    inset: calc(-1 * var(--cck-storybook-size-28)) calc(-1 * var(--cck-storybook-size-24));;\r\n    opacity: 0.2;\r\n    z-index: 0;\r\n`;\nconst SharkEffectImg = styled.img `\r\n    width: 100%;\r\n`;\nconst Overlay = styled.div `\r\n    background: var(--cck-storybook-effect-gradient-doc-page-header-overlay);\r\n    inset: -5px -18px -20px;\r\n    position: absolute;\r\n`;\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport styled from 'styled-components';\nimport { DocCckStorybookThemeSwitcher, DocCckThemeSwitcher } from '@cocokits/storybook-theme-switcher';\nexport const DocHeader = ({ hideCckThemeSwitcher = false }) => {\n    return (_jsxs(Nav, { children: [!hideCckThemeSwitcher && _jsx(DocCckThemeSwitcher, {}), _jsx(FlexSpacer, {}), _jsx(DocCckStorybookThemeSwitcher, {})] }));\n};\n// region ---------------- STYLES ----------------\nconst Nav = styled.nav `\r\n    width: 100%;\r\n    height: var(--cck-storybook-size-64);\r\n    display: flex;\r\n    align-items: center;\r\n    position: sticky;\r\n    top: var(--cck-storybook-size-0);\r\n    z-index: 10;\r\n    padding: var(--cck-storybook-size-0) var(--cck-storybook-size-24);\r\n    background-color: var(--cck-storybook-color-bg-body-alpha-6);\r\n    backdrop-filter: blur(var(--cck-storybook-blur-4));\r\n    -webkit-backdrop-filter: blur(var(--cck-storybook-blur-4)); // Safari \r\n    border-bottom: 1px solid var(--cck-storybook-color-brand-alpha-5);\r\n`;\nconst FlexSpacer = styled.div `\r\n  flex: 1;\r\n`;\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport styled from 'styled-components';\nimport { DocBgEffect } from './DocBgEffect';\nimport { DocHeader } from './DocHeader';\nexport const DocPage = ({ children, hideCckThemeSwitcher = false, utilsPage = false }) => {\n    return (\n    // sb-unstyled: Remove default storybook styles\n    _jsxs(StyledWrapper, { className: `sb-unstyled ${utilsPage ? 'utils-doc-page' : ''}`, children: [_jsx(DocBgEffect, {}), _jsx(DocHeader, { hideCckThemeSwitcher: hideCckThemeSwitcher }), _jsx(StyledContentWrapper, { children: children })] }));\n};\n// region ---------------- STYLES ----------------\nexport const StyledWrapper = styled.div `\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n`;\nconst StyledContentWrapper = styled.div `\r\n    display: flex;\r\n    position: relative;\r\n    width: 100%;\r\n    max-width: var(--cck-storybook-size-1280);\r\n    margin: auto;\r\n`;\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport styled, { css } from 'styled-components';\nimport { scrollToStoryById } from './doc-page.util';\nimport { useExistingItems, useSelectedTocItem } from './DocToc.hooks';\nexport const DocToc = ({ items }) => {\n    const existItems = useExistingItems(items);\n    const selected = useSelectedTocItem(existItems);\n    return (_jsxs(StyledContainer, { children: [_jsx(\"h5\", { children: \"On this page\" }), _jsx(StyledOl, { children: existItems.map(item => (_jsx(StyledLi, { \"$selected\": item.id === selected, onClick: () => scrollToStoryById(item.id), children: item.name }, item.id))) })] }));\n};\n// region ---------------- STYLES ----------------\nconst StyledContainer = styled.div `\r\n    overflow-y: auto;\r\n    height: calc(100vh - var(--cck-storybook-size-80));\r\n    position: sticky;\r\n    flex-shrink: 0;\r\n    top: var(--cck-storybook-size-80);\r\n    margin-top: var(--cck-storybook-size-96);\r\n    margin-left: var(--cck-storybook-size-64);\r\n`;\nconst StyledOl = styled.ol `\r\n    position: relative;\r\n    list-style-type: none;\r\n    margin-left: 0;\r\n    margin-top: 0;\r\n    padding-inline-start: var(--cck-storybook-size-20);\r\n\r\n    &:before {\r\n        content: \"\";\r\n        position: absolute;\r\n        left: 0;\r\n        height: 100%;\r\n        width: var(--cck-storybook-size-4);\r\n        background-color: var(--cck-storybook-color-bg-body-inverse-alpha-4);\r\n        border-radius: var(--cck-storybook-size-4);\r\n    }\r\n`;\nconst StyledLi = styled.li `\r\n    text-decoration-line: none;\r\n    font: var(--cck-storybook-text-sm-regular);\r\n    color: var(--cck-storybook-color-font-contrast-2);\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n        color: var(--cck-storybook-color-font-contrast-4);\r\n    }\r\n\r\n    ${props => props.$selected && css `\r\n        position: relative;\r\n        color: var(--cck-storybook-color-brand-default);\r\n\r\n        &:after {\r\n            content: '';\r\n            position: absolute;\r\n            left: calc(-1 * var(--cck-storybook-size-20));\r\n            top: 0;\r\n            bottom: 0;\r\n            width: var(--cck-storybook-size-4);\r\n            background-color: var(--cck-storybook-color-brand-default);\r\n            border-radius: var(--cck-storybook-size-4);\r\n        }\r\n        &:hover {\r\n            color: var(--cck-storybook-color-brand-default);\r\n        }\r\n    `},\r\n`;\n","import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport styled from 'styled-components';\nimport { DocMarkdown } from './DocMarkdown';\nexport const DocArgTypesTable = ({ argTypesList, hideDefault = false, header }) => {\n    if (argTypesList.length === 0) {\n        return;\n    }\n    return (_jsxs(_Fragment, { children: [header && _jsx(StyledH4, { children: header }), _jsxs(\"table\", { className: 'arg-type-table arg-type-table--full-width', children: [_jsx(\"thead\", { children: _jsxs(\"tr\", { children: [_jsx(\"th\", { children: \"Name\" }), _jsx(\"th\", { children: \"Type\" }), _jsx(\"th\", { children: \"Description\" }), !hideDefault && _jsx(\"th\", { children: \"Default\" })] }) }), _jsx(\"tbody\", { children: argTypesList.map(argType => (_jsxs(\"tr\", { children: [_jsx(\"td\", { children: argType.name }), _jsx(\"td\", { children: _jsx(StyledTypeWrapper, { children: argType.type.map(type => _jsx(\"code\", { children: type?.toString() })) }) }), _jsx(\"td\", { children: argType.description && _jsx(DocMarkdown, { children: argType.description }) }), !hideDefault &&\n                                    _jsx(\"td\", { children: argType.defaultValue !== null &&\n                                            argType.defaultValue !== undefined &&\n                                            argType.defaultValue !== '' &&\n                                            argType.defaultValue !== \"''\" &&\n                                            argType.defaultValue !== '\"\"' &&\n                                            _jsx(\"code\", { children: argType.defaultValue?.toString() }) })] }, argType.name))) })] })] }));\n};\n// region ---------------- STYLES ----------------\nconst StyledH4 = styled.h4 `\r\n  margin-top: 24px;\r\n`;\nconst StyledTypeWrapper = styled.div `\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    gap: 8px;\r\n`;\n","import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useOf } from '@storybook/addon-docs';\nimport * as _ from 'lodash';\nimport { useContext } from 'react';\nimport styled from 'styled-components';\nimport { DocArgTypesTable } from './DocArgTypesTable';\nimport { useArgTypesApiList, useArgTypesThemeApiList } from '../../utils/doc-page.utils';\nimport { DocsPageContext } from '../doc-page-container/DocPageContainer';\nimport { deepMerge } from '@cocokits/common-utils';\nexport function DocArgTypes({ cckTheme }) {\n    const resolved = useOf('meta');\n    if (resolved.type !== 'meta') {\n        return;\n    }\n    const { title } = useContext(DocsPageContext);\n    const { argTypes, subcomponents } = resolved.preparedMeta;\n    const primaryComponentName = _.camelCase(title);\n    const hasSubcomponents = !!subcomponents && Object.keys(subcomponents).length > 0;\n    return (_jsxs(_Fragment, { children: [_jsx(DocArgType, { componentName: primaryComponentName, argTypes: argTypes, cckTheme: cckTheme, hideComponentName: false }), hasSubcomponents &&\n                Object.values(subcomponents).map((subcomponent) => {\n                    const isComponentRef = typeof subcomponent === 'function' && !!subcomponent.prototype && subcomponent.prototype.constructor === subcomponent;\n                    if (!isComponentRef) {\n                        return;\n                    }\n                    const componentRef = subcomponent;\n                    const componentName = _.camelCase(componentRef.name.replace(/component$/i, ''));\n                    // Private component such as '_UiBaseComponent'\n                    if (componentName.startsWith('_')) {\n                        return;\n                    }\n                    /**\n                     * `extractArgTypes` is defined in compodoc, and it's only extract the component config and skip the storybook argTypes.\n                     * To fix that we created a custom structure in storybook argsType with then name of component and the args table.\n                     * ```\n                     * argTypes: {\n                     *     MenuTriggerDirective: {\n                     *       menuOpen: { table: { defaultValue: { summary: 'false' } } }\n                     *     }\n                     *   },\n                     * ```\n                     * We will merge the compodoc types with our custom structure types to use both types at the sme time\n                     */\n                    const subcomponentTypes = deepMerge(resolved.preparedMeta.parameters['docs'].extractArgTypes(componentRef), resolved.preparedMeta.argTypes['_' + componentRef.prototype.constructor.name] ?? {});\n                    /**\n                     * all storybook argTypes has a fix structure and the 'name' property exist for all of them.\n                     * ```\n                     *  {\n                     *     name: 'size',\n                     *     description: '...'\n                     *     table: {...},\n                     *     type: {...}\n                     *  }\n                     * ```\n                     * but because of our custom structure, the storybook will generate a type object with only name like this:\n                     * MenuTriggerDirective: {\n                     *  name: \"MenuTriggerDirective\",\n                     *  menuOpen: {...}\n                     * }\n                     * ```\n                     *\n                     * in this case the 'name' property in not a type definition, and it's only to detect the subcomponent argType.\n                     * So we have to remove it, otherwise the other part of the code, consider it as a artType,\n                     * and try to parse it to show the result as API table\n                     *\n                     * Summery:\n                     * Convert this structure\n                     * ```\n                     *   {\n                     *     name: 'THE NAME OF SUBCOMPONENT',\n                     *     type: {...},\n                     *     size: {...},\n                     *     color: {...},\n                     *     ...\n                     *   }\n                     * ```\n                     * to this:\n                     * ```\n                     *   {\n                     *     type: {...},\n                     *     size: {...},\n                     *     color: {...},\n                     *     ...\n                     *   }\n                     * ```\n                     */\n                    delete subcomponentTypes.name;\n                    return (_jsx(DocArgType, { componentName: componentName, argTypes: subcomponentTypes, cckTheme: cckTheme, hideComponentName: false }, subcomponent.toString()));\n                })] }));\n}\nexport function DocArgType({ componentName, argTypes, cckTheme, hideComponentName }) {\n    const apiArgTypeList = useArgTypesApiList(componentName, argTypes, cckTheme.uiComponentConfig);\n    const themeApiArgTypeList = useArgTypesThemeApiList(componentName, cckTheme.uiComponentConfig);\n    const isApiListEmpty = apiArgTypeList.props.length === 0 &&\n        apiArgTypeList.methods.length === 0 &&\n        apiArgTypeList.events.length === 0;\n    const isThemApiListEmpty = themeApiArgTypeList ? themeApiArgTypeList?.length === 0 : true;\n    if (isApiListEmpty && isThemApiListEmpty) {\n        return (_jsxs(_Fragment, { children: [_jsx(StyledSpacer, {}), !hideComponentName && _jsxs(\"h3\", { children: [_.capitalize(componentName), \" Component API\"] }), _jsx(StyledText, { children: \"This components has no API configuration\" })] }));\n    }\n    return (_jsxs(_Fragment, { children: [_jsx(StyledSpacer, {}), !hideComponentName && _jsxs(\"h3\", { children: [_.capitalize(componentName), \" Component API\"] }), _jsx(DocArgTypesTable, { argTypesList: apiArgTypeList.props, header: 'Props' }), _jsx(DocArgTypesTable, { argTypesList: apiArgTypeList.events, header: 'Events', hideDefault: true }), _jsx(DocArgTypesTable, { argTypesList: apiArgTypeList.methods, header: 'methods', hideDefault: true }), themeApiArgTypeList && themeApiArgTypeList.length > 0 &&\n                _jsxs(_Fragment, { children: [_jsx(StyledSpacer, {}), !hideComponentName && _jsxs(\"h3\", { children: [_.capitalize(componentName), \" \", cckTheme.name, \" Theme API\"] }), _jsx(DocArgTypesTable, { argTypesList: themeApiArgTypeList })] })] }));\n}\nconst StyledSpacer = styled.div `\r\n    height: 1px;\r\n    margin-top: 48px;\r\n`;\nconst StyledText = styled.div `\r\n    font: var(--cck-storybook-text-sm-regular);\r\n    color: var(--cck-storybook-color-font-contrast-2);\r\n`;\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Canvas } from '@storybook/addon-docs';\nimport { useContext } from 'react';\nimport styled from 'styled-components';\nimport { useDocSelectedCckTheme } from '@cocokits/storybook-theme-switcher';\nimport { DocArgTypes } from './DocArgTypes';\nimport { DocCategory } from './DocCategory';\nimport { DocMarkdown } from './DocMarkdown';\nimport { DocSection } from './DocSection';\nimport { DocToc } from './DocToc';\nimport { filterStoryByScenario, filterStoryByThemeTag, getApiDescription } from '../../utils/doc-page.utils';\nimport { DocsPageContext } from '../doc-page-container/DocPageContainer';\nexport function AutoDocMain() {\n    const { title, metaDescription, category, primaryStory, stories } = useContext(DocsPageContext);\n    const cckTheme = useDocSelectedCckTheme();\n    if (!cckTheme) {\n        return;\n    }\n    const tokItems = stories\n        .filter(story => filterStoryByThemeTag(story, cckTheme.id))\n        .map(story => ({\n        id: story.id, name: story.name.replace(/^(theme|Theme) [^:]+: /, '') // Replace 'Theme XXX: AAA' to 'AAA'\n    }));\n    const API_SECTION = { id: `${primaryStory.componentId}--api`, name: 'API' };\n    tokItems.push(API_SECTION);\n    return (_jsxs(StyledWrapper, { children: [_jsxs(StyledMain, { children: [_jsxs(\"div\", { children: [_jsx(DocCategory, { children: category }), _jsx(\"h1\", { children: title }), _jsx(DocMarkdown, { children: metaDescription })] }), stories\n                        .filter(story => filterStoryByThemeTag(story, cckTheme.id))\n                        .filter(story => filterStoryByScenario(story, cckTheme))\n                        .map((story) => {\n                        return (_jsx(DocSection, { id: story.id, title: story.name, description: story.parameters['docs']?.description?.story, children: _jsx(Canvas, { of: story.moduleExport, withToolbar: false }) }, story.id));\n                    }), _jsx(\"hr\", {}), _jsx(DocSection, { id: API_SECTION.id, title: API_SECTION.name, description: getApiDescription(cckTheme.name), children: _jsx(DocArgTypes, { cckTheme: cckTheme }) })] }), _jsx(DocToc, { items: tokItems })] }));\n}\n// region ---------------- STYLES ----------------\nconst StyledWrapper = styled.div `\r\n    display: flex;\r\n    position: relative;\r\n    width: 100%;\r\n    margin: auto;\r\n`;\nconst StyledMain = styled.main `\r\n    flex: 1;\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: var(--cck-storybook-size-64) var(--cck-storybook-size-32) var(--cck-storybook-size-128) var(--cck-storybook-size-32);\r\n    margin: 0 auto;\r\n    z-index: 1;\r\n    min-width: 0;\r\n`;\n"],"names":[],"sourceRoot":""}